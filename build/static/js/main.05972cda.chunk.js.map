{"version":3,"sources":["tonva/ui/index.ts","tonva/uq/controllers/CVEntity.tsx","tonva/ui/nav.tsx","tonva/net/guestApi.ts","tonva/net/index.ts","tonva/index.ts","tonva/uq/controllers/form/viewModel.tsx","tonva/net/appBridge.ts","tonva/ui/page.tsx","tonva/uq/tools/jsonStringify.ts","tonva/uq/tools/tv.tsx","tonva/uq/tools/index.ts","tonva/uid.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/uq/controllers/link/cLink.tsx","tonva/uq/controllers/link/index.ts","tonva/net/wsChannel.ts","tonva/net/host.ts","tonva/ui/image.tsx","tonva/uq/controllers/index.ts","tonva/pageItems.ts","tonva/uq/uqs/entity.ts","tonva/uq/uqs/tuid/idCache.ts","tonva/uq/uqs/tuid/tuidBox.ts","tonva/uq/uqs/tuid/boxId.tsx","tonva/uq/uqs/tuid/tuidDiv.ts","tonva/uq/uqs/tuid/tuid.ts","tonva/uq/uqs/action.ts","tonva/uq/uqs/sheet.ts","tonva/uq/uqs/query.ts","tonva/uq/uqs/book.ts","tonva/uq/uqs/history.ts","tonva/uq/uqs/map.ts","tonva/uq/uqs/pending.ts","tonva/uq/uqs/uq.ts","tonva/uq/uqs/uqApp.ts","tonva/uq/uqs/index.ts","tonva/user.ts","tonva/ui/edit/itemEdit.tsx","tonva/uq/controllers/tuid/vTuidMain.tsx","tonva/uq/controllers/tuid/vTuidEdit.tsx","tonva/uq/controllers/tuid/vTuidSelect.tsx","tonva/uq/controllers/tuid/vTuidView.tsx","tonva/uq/controllers/tuid/vTuidInfo.tsx","tonva/uq/controllers/tuid/pageItems.ts","tonva/uq/controllers/tuid/vTuidList.tsx","tonva/uq/controllers/tuid/cTuid.ts","tonva/uq/controllers/tuid/index.tsx","tonva/uq/controllers/form/vBand.tsx","tonva/uq/controllers/form/vSubmit.tsx","tonva/uq/controllers/form/rule.ts","tonva/uq/controllers/form/vField/vField.tsx","tonva/uq/controllers/form/vField/vComputeField.tsx","tonva/uq/controllers/form/vArr.tsx","tonva/uq/controllers/form/vField/vTuidField.tsx","tonva/uq/controllers/form/bandsBuilder.ts","tonva/uq/controllers/form/vField/buildVmField.ts","tonva/uq/controllers/form/vForm.tsx","tonva/uq/controllers/form/index.ts","tonva/net/httpChannel.ts","tonva/ui/res.ts","tonva/net/apiBase.ts","tonva/ui/pageHeader.tsx","tonva/ui/components/Badge.tsx","tonva/ui/components/LMR.tsx","tonva/ui/components/FA.tsx","tonva/ui/components/IconText.tsx","tonva/ui/components/Muted.tsx","tonva/ui/components/index.ts","tonva/uq/controllers/query/defaultRow.tsx","tonva/uq/controllers/query/vQueryMain.tsx","tonva/uq/controllers/query/vQuerySelect.tsx","tonva/uq/controllers/query/cQuery.ts","tonva/uq/controllers/query/index.ts","tonva/ui/edit/imageItemEdit.tsx","tonva/entry/userApi.ts","tonva/ui/loading.tsx","tonva/ui/resUploader.tsx","tonva/uq/controllers/CApp.tsx","tonva/uq/controllers/icons.tsx","tonva/uq/controllers/ControllerUq.ts","tonva/uq/centerApi.ts","tonva/uq/controllers/sheet/vMain.tsx","tonva/uq/controllers/sheet/vNew.tsx","tonva/uq/controllers/sheet/vSheetView.tsx","tonva/uq/controllers/sheet/vEdit.tsx","tonva/uq/controllers/sheet/vSheetAction.tsx","tonva/uq/controllers/sheet/vSchema.tsx","tonva/uq/controllers/sheet/vArchives.tsx","tonva/uq/controllers/sheet/vList.tsx","tonva/uq/controllers/sheet/vArchived.tsx","tonva/uq/controllers/sheet/vSheet.tsx","tonva/uq/controllers/sheet/vSaved.tsx","tonva/uq/controllers/sheet/vSheetProcessing.tsx","tonva/uq/controllers/sheet/cSheet.ts","tonva/uq/controllers/sheet/index.ts","tonva/uq/controllers/book/vBookMain.tsx","tonva/uq/controllers/book/cBook.ts","tonva/uq/controllers/cUq/vUq.tsx","tonva/uq/controllers/cUq/cUq.tsx","tonva/uq/controllers/cUq/index.ts","tonva/uq/controllers/map/vMain.tsx","tonva/uq/controllers/map/inputValues.tsx","tonva/uq/controllers/map/cMap.ts","tonva/uq/controllers/map/index.ts","tonva/uq/controllers/pending/vPendingMain.tsx","tonva/uq/controllers/pending/cPending.ts","tonva/uq/controllers/pending/index.ts","tonva/uq/controllers/action/vActionMain.tsx","tonva/uq/controllers/action/cAction.ts","tonva/uq/controllers/action/index.ts","tonva/uq/controllers/history/vHistoryMain.tsx","tonva/uq/controllers/history/cHistory.ts","tonva/uq/controllers/history/index.ts","tonva/net/netToken.ts","tonva/ui/VM.tsx","tonva/ui/schema/index.ts","tonva/ui/rules/index.ts","tonva/ui/dropDownActions/index.tsx","tonva/ui/easyDate/index.tsx","tonva/ui/media.tsx","tonva/ui/searchBox.tsx","tonva/cacheIds.ts","tonva/uq/index.ts","tonva/ui/form/rules/index.ts","tonva/ui/form/widgets/widget.tsx","tonva/ui/form/widgets/textWidget.tsx","tonva/ui/form/widgets/numberWidget.tsx","tonva/ui/form/widgets/updownWidget.tsx","tonva/ui/form/widgets/dateWidget.tsx","tonva/ui/form/widgets/checkBoxWidget.tsx","tonva/ui/form/widgets/selectWidget.tsx","tonva/ui/form/widgets/radioWidget.tsx","tonva/ui/form/widgets/idWidget.tsx","tonva/ui/form/widgets/unknown.tsx","tonva/ui/form/widgets/buttonWidget.tsx","tonva/ui/form/context.tsx","tonva/ui/form/widgets/arrComponent.tsx","tonva/ui/form/widgets/imageWidget.tsx","tonva/ui/form/widgets/factory.tsx","tonva/ui/form/widgets/textareaWidget.tsx","tonva/ui/form/widgets/passwordWidget.tsx","tonva/ui/form/widgets/rangeWidget.tsx","tonva/ui/form/formRes.ts","tonva/ui/form/form.tsx","tonva/ui/form/field.tsx","tonva/ui/form/index.ts","tonva/ui/edit/stringItemEdit.tsx","tonva/ui/edit/radioItemEdit.tsx","tonva/ui/edit/selectItemEdit.tsx","tonva/ui/edit/edit.tsx","tonva/ui/edit/index.tsx","tonva/ui/list/base.tsx","tonva/ui/list/clickable.tsx","tonva/ui/list/static.tsx","tonva/ui/list/selectable.tsx","tonva/ui/list/index.tsx","tonva/ui/propGrid/row.tsx","tonva/ui/propGrid/propView.tsx","tonva/ui/propGrid/PropGrid.tsx","tonva/ui/propGrid/index.tsx","tonva/ui/tabs/tabs.tsx","tonva/ui/tabs/index.tsx","tonva/entry/meInfo.tsx","tonva/ui/fetchErrorView.tsx","tonva/local.ts","images/logo.svg","tonva/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","ui/index.tsx","CMiApp.tsx","ui/mi/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_nav__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","o","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","_image__WEBPACK_IMPORTED_MODULE_10__","_rules__WEBPACK_IMPORTED_MODULE_12__","_list__WEBPACK_IMPORTED_MODULE_13__","_easyDate__WEBPACK_IMPORTED_MODULE_15__","_propGrid__WEBPACK_IMPORTED_MODULE_16__","_components__WEBPACK_IMPORTED_MODULE_17__","_media__WEBPACK_IMPORTED_MODULE_18__","_searchBox__WEBPACK_IMPORTED_MODULE_19__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","ownerField","cTuidSelect","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","_ui__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","RegExp","test","navigator","userAgent","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_1__","props","waitCount","isHistoryBack","clearError","setState","fetchError","clickCount","firstClick","clickRange","clickMax","onClick","now","Date","nav","reverseTest","onTestClick","testing","push","_page__WEBPACK_IMPORTED_MODULE_3__","header","className","toNormal","pop","back","bind","navBack","stack","state","wait","window","addEventListener","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","history","pushState","key","ceased","refresh","item","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_11__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","style","lineHeight","_components__WEBPACK_IMPORTED_MODULE_16__","map","index","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","resetTest","setTesting","lang","district","_res__WEBPACK_IMPORTED_MODULE_10__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","m1","m2","testMode","normalMode","msg","receive","unitRes","fetch","json","unit","unitName","envUnit","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_MIDATA_HOST","REACT_APP_UNIT","Number","_net__WEBPACK_IMPORTED_MODULE_8__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_9__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","guestApi","uqApi","wsChannel","apiBase","appBridge","host","_ui__WEBPACK_IMPORTED_MODULE_3__","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_uq__WEBPACK_IMPORTED_MODULE_8__","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","uqTokens","logoutUqTokens","appsInFrame","_unit","val","isBridged","setAppInFrame","appHash","parts","split","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","a","clone","_ui__WEBPACK_IMPORTED_MODULE_2__","subFrameStarted","onReceive","_uqApi__WEBPACK_IMPORTED_MODULE_4__","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","apiName","db","uqOwner","uqName","uq","onReceiveAppApiMessage","urlTest","action","uqTokenActions","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrTest","onAppApiReturn","buildAppUq","realUnit","getUnit","uqToken","at","opener","appUq","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","t","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_3___default","onTabClick","pageHeader","_pageHeader__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","replacer","value","substr","jsonStringify","Tv","mobx_react_module","tuidValue","nullUI","react","ttv","divObj","bi","logContent","render","controllers","boxIdContent","tv","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApiBase","path","uqTokenApi","unitParam","nowTick","tick","appUqParams","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","obj","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","tslib_es6","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","isDevelopment","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","startsWith","endsWith","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","debugHost","getUrlOrDebug","urlDebug","timeout","text","catch","Error","fetchLocalCheck","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","altImage","currentTarget","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","PageItems","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","array","deep","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reset","more","splice","reverse","ln","entity_Entity","typeId","fieldMaps","sys","indexOf","sName","jName","returns","f","schema","loadEntitySchema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","entities","getTuid","fn","fieldArr","toLowerCase","an","buildFieldsParams","arrResult","pa","rowResult","getIdFromObj","packRow","packArr","row","r","charCodeAt","escape","boxId","unpackRow","unpackArr","ch0","ch","fLen","to","vals","maxCacheSize","idCache_IdCache","tuidLocal","queue","cache","mobx_module","waitingIds","divName","defer","util","has","cacheTuids","moveToHead","shift","delete","_id","tuidValues","loadIds","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","loadTuidIds","IdDivCache","div","tuidBox_TuidBox","alert","TuidBoxDiv","boxId_BoxId","valueFromId","boxName","isUndefined","assureBox","boxId_BoxDivId","tuidDiv_TuidDiv","idName","idCache","mainFields","cacheFields","assureObj","cacheIds","cacheFieldsInValue","unpackTuidIdsOfFields","tuid_Tuid","isImport","tuid_TuidLocal","divs","tuidDiv","setUIRes","uiDivs","hasDiv","tuidIds","tuidGet","arrValues","$id","toISOString","tuidSave","searchArr","api","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","tuid_TuidImport","save","search","loadArr","saveArr","posArr","action_Action","pack","actionReturns","sheet_Sheet","states","op","ops","actions","discription","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","mySheets","pageItems","getStateSheets","query_Query","isPaged","size","list","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","schemaFrom","keys","actionSchema","newAction","querySchema","newQuery","add","submit","del","pending_Pending","fieldDefaultValue","TuidsCache","clearCacheTimer","cacheTimer","uq_Uq","uqApp","uqData","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","tuidsCache","baseUrl","trim","filter","net","init","accesses","buildEntities","loadEntities","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","book","pending","newBook","newMap","newHistory","newSheet","newPending","buildSheet","build","buildTuidBox","af","UqApp","tonvaAppName","collection","setLocal","tuidImport","setFrom","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","ItemEdit","itemSchema","uiItem","isChanged","internalStart","internalEnd","_nav__WEBPACK_IMPORTED_MODULE_1__","rules","nv","newValue","verifyRule","rule","Array","isArray","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","placeholder","vTuidEdit_VTuidEdit","next","vForm","closePage","finish","getValues","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divItems","getDivItems","vTuidView_VTuidView","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","vTuidList_VTuidListBase","renderRow","clickRow","callOnSelected","rowKey","ownerId","onSelected","vTuidList_VTuidList","cTuid_CTuid","buildPageItems","first","cTuid_CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","cTuid_CTuidMain","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","isOk","disabled","caption","Rule","RuleRequired","defy","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","buildRules","required","null","checkRules","errors","readonly","FormMode","editable","vField_VInputControl","renderError","tonva_ui","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","band","getVFields","getVArr","getVSubmit","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","refetchApi","ApiBase","getHttpChannel","callFetch","PageHeader","logoutClick","showLogout","navChange","hasBack","href","debugLogout","b","nick","role","openWindow","rightView","Badge_Badge","badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","fixWidth","border","pull","pulse","rotate","flip","inverse","classnames","IconText_IconText","iconClass","textClass","Muted","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_8__","overSize","upload","resUploader","resId","_page__WEBPACK_IMPORTED_MODULE_7__","_resUploader__WEBPACK_IMPORTED_MODULE_4__","multiple","maxSize","padding","_image__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_6__","mobx__WEBPACK_IMPORTED_MODULE_3__","userApi","_net__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","account","verify","password","prop","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","CApp","cImportUqs","cUqCollection","onRowClick","_net__WEBPACK_IMPORTED_MODULE_3__","selectUnitPage","appUnits","setSettings","getCUq","uqUI","CUq","_cUq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","retErrors","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","showUnsupport","appUnit","_uqs__WEBPACK_IMPORTED_MODULE_6__","uqAppData","promiseInits","promiseChecks","uqFullName","newCUq","addUq","checkEntities","checks","retError","setTuidImportsLocal","clearPrevPages","showMainPage","renderView","userName","uqId","sheetTypeId","getCUqFromId","navSheet","appPage","appContent","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","ControllerUq","_ui__WEBPACK_IMPORTED_MODULE_0__","CenterApi","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","getStateLabel","templet","statesCount","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","buttons","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","cApp","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","getUI","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityType","cFromName","tUI","cEntity","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","isFrom","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","tuidBox","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","submitReturns","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","mobileRegex","emailRegex","EasyDate","renderDate","vDate","withTime","nDate","_date","month","year","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","defaultValue","maxCount","dict","Map","loadId","_loadIds","_loadId","startApp","convertUIKeyToLowercase","_controllers__WEBPACK_IMPORTED_MODULE_2__","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","number","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","hasError","removeErrorWidget","addErrorWidget","isChanging","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","clearErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","checked","trueValue","falseValue","defaultChecked","selectWidget_SelectWidget","option","radioStyle","height","idWidget_IdWidget","pickId","clearContextError","form-control","required-item","cursor-pointer","is-invalid","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","checkHasError","clearContextErrors","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageItemEdit","imageSrc","end","ui_image","widgetsFactory","textarea","datetime","time","email","updown","checkbox","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","verifyValue","element","radioItemEdit_RadioItemEdit","selectItemEdit_SelectItemEdit","edit_Edit","defaultSepClassName","defaultRowContainerClassName","divValue","requireFlag","rowContainerClassName","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","topBorder","bottomBorder","elItems","base_ListBase","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","some","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","col","labelFixLeft","bk","bg-white","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","row_ComponentPropRow","component","full","propView_PropView","buildRows","isGap","String","PropGrid_PropGrid","propView","tabs_Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","display","notifyCircle","num","userSetProp","FetchErrorView","reApi","_net__WEBPACK_IMPORTED_MODULE_2__","errContent","LocalData","Data","module","exports","meTab","LoadableComponent","lib_default","loader","tonva","VSiteHeader_VSiteHeader","logo_default","alt","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","CHome_CHome","renderHome","src_ui","cHome","initTabName","faceTabs","bruce/mi","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.05972cda.chunk.js","sourcesContent":["export * from './nav';\nexport * from './pageHeader';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';\nexport * from './rules';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './components';\nexport * from './media';\nexport * from './searchBox';\n","import * as React from 'react';\nimport { Controller, VPage, View } from '../../ui';\nimport { Entity, Field } from '../uqs';\nimport { CUq } from './cUq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let {tuid} = _tuid;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid } = field;\n            let {tuid, ownerField} = _tuid;\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\n            let param:any = undefined;\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import * as React from 'react';\nimport {observable, has} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../fetchError';\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\nimport {LocalData} from '../local';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\nimport { FA } from './components';\n\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\n/*\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n*/\nconst logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface NavViewState {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, NavViewState> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        if (key === undefined) return;\n        if (this.stack.find(v => v.key === key) === undefined) return;\n        while (this.stack.length >0) {\n            let len = this.stack.length;\n            let top = this.stack[len-1];\n            if (top.key === key) break;\n            this.pop();\n        }\n    }\n\n    topKey():number {\n        let len = this.stack.length;\n        if (len === 0) return undefined;\n        return this.stack[len-1].key;\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        //this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (self != window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    private clickCount = 0;\n    private firstClick: number = 0;\n    private clickRange = 3000;\n    private clickMax = 6;\n    private onClick = () => {\n        let now = Date.now();\n        if (now - this.firstClick > this.clickRange) {\n            this.clickCount = 1;\n            this.firstClick = now;\n            return;\n        }\n        ++this.clickCount;\n        if (this.clickCount >= this.clickMax) {\n            nav.reverseTest();\n            this.firstClick = 0;\n            return;\n        }\n    }\n    private onTestClick = () => {\n        nav.testing = false;\n        nav.push(<Page header={false}>\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\n                <div>当前运行在测试模式</div>\n                <div className=\"mt-4\">\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\n                </div>\n            </div>\n        </Page>);\n    }\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <Loading />\n                </li>;\n                break;\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n                //<span className=\"sr-only\">Loading...</span>\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\n        let test = nav.testing===true && \n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}\n                onClick={this.onTestClick}>\n                <FA className=\"text-warning\" name=\"info-circle\" />\n            </span>;\n        return (\n        <ul className=\"va\" onClick={this.onClick}>\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n            {test}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport interface NavSettings {\n    loginTop?: JSX.Element;\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    private navSettings: NavSettings;\n    @observable user: User/*InNav*/ = undefined;\n    @observable testing: boolean;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n        this.testing = false;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    private static testMode = '测试';\n    private static normalMode = '正常';\n    private setTesting(testing:boolean) {\n        this.testing = testing;\n        this.local.testing.set(testing);\n    };\n    private resetTest = () => {\n        this.setTesting(!this.testing);\n        //this.pop();\n        this.start();\n    }\n    toNormal = () => {\n        this.setTesting(false);\n        this.start();\n    }\n    reverseTest() {\n        let m1:string, m2:string;\n        if (this.testing === true) {\n            m1 = Nav.testMode;\n            m2 = Nav.normalMode;\n        }\n        else {\n            m1 = Nav.normalMode;\n            m2 = Nav.testMode;\n        }\n\n        this.push(<Page back=\"close\" header={false}>\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\n                <div>\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\n                </div>\n                <div className=\"mt-4\">\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getPredefinedUnitName() {\n        try {\n            let unitRes = await fetch('unit.json', {});\n            //if (unitRes)\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.clear();\n            return;\n        }\n    }\n\n    private async loadPredefinedUnit() {\n        let envUnit = process.env.REACT_APP_UNIT;\n        if (envUnit !== undefined) {\n            return Number(envUnit);\n        }\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (isDevelopment !== true) return unit.id;\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    setSettings(settings?: NavSettings) {\n        this.navSettings = settings;\n    }\n\n    hashParam: string;\n    private centerHost: string;\n    async start() {\n        try {\n            this.testing = this.local.testing.get();\n            await host.start(this.testing);\n            let hash = document.location.hash;\n            if (hash !== undefined && hash.length > 0) {\n                let pos = getExHashPos();\n                if (pos < 0) pos = undefined;\n                this.hashParam = hash.substring(1, pos);\n            }\n            nav.clear();\n            this.startWait();\n            let {url, ws, resHost} = host;\n            this.centerHost = url;\n            this.resUrl = 'http://' + resHost + '/res/';\n            this.wsHost = ws;\n            setCenterUrl(url);\n            \n            let guest:Guest = this.local.guest.get();\n            if (guest === undefined) {\n                guest = await guestApi.guest();\n            }\n            nav.setGuest(guest);\n\n            let exHash = getExHash();\n            let appInFrame = setAppInFrame(exHash);\n            if (exHash !== undefined && window !== window.parent) {\n                // is in frame\n                if (appInFrame !== undefined) {\n                    this.ws = wsBridge;\n                    console.log('this.ws = wsBridge in sub frame');\n                    //nav.user = {id:0} as User;\n                    if (self !== window.parent) {\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\n                    }\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                    //await this.showAppView();\n                    return;\n                }\n            }\n\n            let predefinedUnit = await this.loadPredefinedUnit();\n            appInFrame.predefinedUnit = predefinedUnit;\n\n            let user: User = this.local.user.get();\n            if (user === undefined) {\n                let {notLogined} = this.nav.props;\n                if (notLogined !== undefined) {\n                    await notLogined();\n                }\n                else {\n                    await nav.showLogin(undefined);\n                }\n                return;\n            }\n\n            await nav.logined(user);\n        }\n        catch (err) {\n        }\n        finally {\n            this.endWait();\n        }\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        logoutApis();\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\n        ws.connect();\n\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    loginTop(defaultTop:JSX.Element) {\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\n        let lv = await import('../entry/login');\n        let loginView = <lv.default \n            withBack={withBack} \n            callback={callback} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        appInFrame.unit = undefined;\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    async changePassword() {\n        let cp = await import('../entry/changePassword');\n        nav.push(<cp.ChangePasswordPage />);\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    topKey():number {\n        return this.nav.topKey();\n    }\n    popTo(key:number) {\n        this.nav.popTo(key);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import { decodeGuestToken } from '../user';\nimport { CenterApiBase } from './uqApi';\n\nexport class GuestApi extends CenterApiBase {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './uqApi';\nexport {appInFrame, isBridged, getExHash} from './appBridge';\nexport * from './host';\nexport {httpGet} from './httpChannel';\n","export {left0} from './left0';\nexport * from './user';\nexport * from './net';\nexport * from './ui';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\nexport * from './entry';\nexport * from './uq';\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify } from '../../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\nexport const PureJSONContent = (values:any, x?:any) => {\n    return <>content: {jsonStringify(values)}</>;\n}\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","import _ from 'lodash';\nimport {nav} from '../ui';\nimport {uid} from '../uid';\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, UqData, centerToken, UqAppData, setCenterToken} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    db: string;\n    url: string;\n    token: string;\n}\nconst uqTokens:{[uqName:string]: UqToken}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) uqTokens[i] = undefined;\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let appInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                db: ret.db,\n                url: ret.url,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    let user = nav.user = message; // message.user;\n    setCenterToken(user.id, user.token);\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\n    //let unit = getUnit();\n    let {unit, predefinedUnit} = appInFrame;\n    unit = unit || predefinedUnit;\n    if (!unit) {\n        console.error('no unit defined in unit.json or not logined in', unit);\n    }\n    let parts = apiName.split('/');\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\n    let ret = await uqTokenApi.uq(param);\n    let {db, url, token} = ret;\n    return {name: apiName, db:db, url: url, token: token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, db, url, urlTest, token} = message;\n    let action = uqTokenActions[apiName];\n    if (action === undefined) {\n        throw 'error app api return';\n        //return;\n    }\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\n    //action.url = realUrl;\n    //action.token = token;\n    action.resolve({\n        name: apiName,\n        db: db,\n        url: realUrl,\n        token: token,\n    } as UqToken);\n}\n\nexport function setAppInFrame(appHash: string):AppInFrame {\n    if (appHash) {\n        let parts = appHash.split('-');\n        let len = parts.length;\n        if (len > 0) {\n            let p = 1;\n            appInFrame.hash = parts[p++];\n            if (len>0) appInFrame.unit = Number(parts[p++]);\n            if (len>1) appInFrame.page = parts[p++];\n            if (len>2) appInFrame.param = parts.slice(p++);\n        }\n    }\n    return appInFrame;\n}\n\nexport function getExHashPos():number {\n    let hash = document.location.hash;\n    if (hash !== undefined && hash.length > 0) {\n        let pos = hash.lastIndexOf('#tv-');\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\n        return pos;\n    }\n    return -1;\n}\n\nexport function getExHash():string {\n    let pos = getExHashPos();\n    if (pos < 0) return undefined;\n    return document.location.hash.substring(pos);\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv-' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nfunction getUnit():number {\n    let {unit, predefinedUnit} = appInFrame;\n    let realUnit = unit || predefinedUnit;\n    if (realUnit === undefined) {\n        throw 'no unit defined in unit.json or not logined in';\n    }\n    return realUnit;\n}\n\ninterface UqTokenAction {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\n    if (!isBridged()) {\n        let unit = getUnit();\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {db, url, urlTest} = uqToken;\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"**** before buildAppUq ****\", appInFrame);\n    let bp = uqTokenActions[uq];\n    if (bp !== undefined) return;\n    return new Promise<void>((resolve, reject) => {\n        uqTokenActions[uq] = {\n            resolve: async (at:any) => {\n                let {db, url, token} = await at;\n                uqTokens[uq] = {\n                    name: uq,\n                    db: db,\n                    url: url,\n                    token: token,\n                };\n                uqTokenActions[uq] = undefined;\n                console.log(\"**** after buildAppUq ****\", appInFrame);\n                resolve();\n            },\n            reject: reject,\n        };\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: appInFrame.hash,\n        }, \"*\");\n    });\n}\n\nexport function appUq(uq:string):UqToken {\n    let uts = uqTokens;\n    return uts[uq];\n}\n/*\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        let unit = getUnit();\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: appInFrame.hash,\n        }, \"*\");\n    });\n}\n*/\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {PageHeader} from './pageHeader';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string;\n    icon?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    tabPosition?: 'top' | 'bottom';\n    logout?: boolean | (()=>Promise<void>);\n    headerClassName?: string;\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\n        if (t0 === undefined) {\n            t0 = this.state.tabs[0];\n            if (t0 === undefined) return;\n        }\n        await t0.load && await t0.load();\n        //await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot');\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num');\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let pageHeader = header !== false &&\n            <PageHeader \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right}\n                className={headerClassName}\n            />;\n\n        return <article className='page-container'>\n            {pageHeader}\n            {tabPosition==='top' && tabs}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                })\n            }\n            </section>\n            {tabPosition!=='top' && tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\n        let pageHeader = header !== false && <PageHeader \n            back={back} \n            center={header as any}\n            right={right}\n            logout={this.props.logout}\n            className={headerClassName}\n        />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {pageHeader}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { BoxId, Tuid } from '../uqs';\nimport { PureJSONContent } from '../controllers';\n\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    let logContent:any;\n    switch(typeof bi) {\n        case 'undefined': logContent = <>boxId undefined</>; break;\n        case 'number': logContent = <>id:{bi}</>; break;\n    }\n    if (typeof (bi as any).render !== 'function') {\n        if (ui === undefined) {\n            logContent = PureJSONContent(bi, x);\n        }\n        else {\n            return ui(bi, x);\n        }\n    }\n    if (logContent !== undefined) {\n        return <del className=\"text-danger\">{logContent}</del>;\n    }\n    return (bi as any).render(ui, x);\n    /*\n    let {id, _$tuid, _$com} = bi;\n    if (id === undefined || id === null) return;\n    let t:TuidBase = _$tuid;\n    if (t === undefined) {\n        if (ui !== undefined) return ui(bi, x);\n        return PureJSONContent(bi, x);\n    }\n    let com = ui || _$com;\n    if (com === undefined) {\n        com = bi._$com = t.getTuidContent();\n    }\n    let val = t.valueFromId(id);\n    if (val === undefined) {\n        return <>[<FA className=\"text-danger\" name=\"bug\" /> no {t.name} on id={id}]</>;\n    }\n    switch (typeof val) {\n        case 'number': val = {id: val}; break;\n    }\n    if (ui !== undefined) {\n        let ret = ui(val, x);\n        if (ret !== undefined) return ret;\n        return <>{id}</>;\n    }\n    return React.createElement(com, val);\n    */\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    if (tuidValue === undefined) {\n        if (nullUI === undefined) return <>[undefined]</>;\n        return nullUI();\n    }\n    if (tuidValue === null) {\n        if (nullUI === undefined) return <>[null]</>;\n        return nullUI();\n    }\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'object':\n            let divObj = boxIdContent(tuidValue, ui, x);\n            if (divObj !== undefined) return divObj;\n            return nullUI === undefined? <>id null</>: nullUI();\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","export * from './jsonStringify';\nexport * from './tv';\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import {nav} from '../ui/nav';\nimport {FetchError} from '../fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel} from './httpChannel';\nimport {HttpChannelNavUI} from './httpChannelUI';\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\nimport { nav } from '../ui';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n    logoutUqTokens();\n}\n\ninterface UqLocal {\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        if (this.local === undefined) return false;\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n            return false;\n        }\n        uq.isNet = true;\n        return true;\n    }\n}\n\nconst localUqs = new CacheUqLocals;\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    async init() {\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\n        if (!uqToken) debugger;\n        let {url, token} = uqToken;\n        this.token = token;\n        channel = new HttpChannel(false, url, token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n    async update():Promise<string> {\n        return await this.get('update');\n    }\n\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    async loadAccess():Promise<any> {\n        return await localUqs.loadAccess(this);\n    }\n\n    async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }\n\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }\n\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }\n\n    async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }\n\n    async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }\n\n    async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }\n\n    async mySheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/my-sheets', data);\n    }\n\n    async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }\n\n    async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }\n\n    async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async actionReturns(name:string, data:object):Promise<any[][]> {\n        return await this.post('action/' + name + '/returns', data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    async user():Promise<any> {\n        return await this.get('user');\n    }\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, db, url, urlTest} = ret;\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\n        this.token = token;\n        return new HttpChannel(false, realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    loginedUserId = userId;\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\n}\n\nexport abstract class CenterApiBase extends ApiBase {\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokens = 'uqTokens';\nexport class UqTokenApi extends CenterApiBase {\n    private local: UqLocals;\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        try {\n            let {unit:unitParam, uqOwner, uqName} = params;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqTokens);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {unit, user} = this.local;\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: params.unit,\n                    uqs: {}\n                };\n            }\n\n            let un = uqOwner+'/'+uqName;\n            let nowTick = new Date().getTime();\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {tick, value} = uq;\n                if (value !== undefined && (nowTick - tick) < 24*3600*1000) {\n                    return _.clone(value);\n                }\n            }\n            let appUqParams:any = _.clone(params);\n            appUqParams.testing = host.testing;\n            let ret = await this.get('app-uq', appUqParams);\n            if (ret === undefined) {\n                let {unit, uqOwner, uqName} = params;\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\n                throw err;\n            }\n\n            this.local.uqs[un] = {\n                tick: nowTick,\n                value: ret,\n            }\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\n            return _.clone(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqTokens);\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApiBase {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface UqAppData {\n    id: number;\n    uqs: UqData[];\n}\n\nexport interface UqData {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    access: string;\n}\n\nexport interface UqServiceData {\n    id: number;\n    db: string;\n    url: string;\n    urlTest: string;\n    token: string;\n}\n\nconst appUqs = 'appUqs';\n\nexport class CenterAppApi extends CenterApiBase {\n    private cachedUqs: UqAppData;\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\n        let ret:any;\n        let ls = localStorage.getItem(appUqs);\n        if (ls !== null) {\n            let rLs = JSON.parse(ls);\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(appOwner, appName);\n            let obj = {\n                appOwner:appOwner, \n                appName:appName, \n                value: ret,\n            }\n            localStorage.setItem(appUqs, JSON.stringify(obj));\n        }\n        return this.cachedUqs = _.cloneDeep(ret);\n    }\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\n    }\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(appOwner, appName);\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\n        let {id:retId, uqs:retUqs} = ret;\n        if (cachedId !== retId) return false;\n        if (cachedUqs.length !== retUqs.length) return false;\n        let len = cachedUqs.length;\n        for (let i=0; i<len; i++) {\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\n        }\n        return true;\n    }\n    async unitxUq(unit:number):Promise<UqServiceData> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\n        return await this.post('tie/reset-password', param);\n    }\n}\n\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    //let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(appOwner, appName);\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\n        if (v === false) {\n            localStorage.removeItem(appUqs);\n            nav.start();\n        }\n    });\n    return ret;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from '../../../ui';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","export const isDevelopment = process.env.NODE_ENV === 'development';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction centerUrlFromHost(host:string) {\n    if (host.startsWith('https://') === true) {\n        if (host.endsWith('/')) return host;\n        return host + '/';\n    }\n    return `http://${host}/`;\n}\nfunction centerWsFromHost(host:string) {\n    let https = 'https://';\n    if (host.startsWith(https) === true) {\n        host = host.substr(https.length);\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\n        return 'wss://' + host + '/tv/';\n    }\n    return `ws://${host}/tv/`\n}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    testing: boolean;\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start(testing:boolean) {\n        this.testing = testing;\n        if (isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\n        if (isDevelopment === false) return url;\n        let host = hosts[debugHost];\n        if (host === undefined) return url;\n        let {value, local} = host;\n        if (local === false) return url;\n        return `http://${value}/`;\n    }\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\n        let path:string;\n        if (this.testing === true) {\n            if (urlTest !== '-') url = urlTest;\n            path = 'uq/test/' + db + '/';\n        }\n        else {\n            path = 'uq/prod/' + db + '/';\n        }\n        url = this.getUrlOrDebug(url);\n        return url + path;\n    }\n\n    async localCheck(urlDebug: string):Promise<boolean> {\n        return await localCheck(urlDebug);\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 200;\n\nfunction fetchLocalCheck(url:string):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, fetchOptions as any)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n    altImage?: string;\n}\n\nexport function Image(props: ImageProps) {\n    let {className, style, src, altImage} = props;\n    if (!src) {\n        return <div className={classNames(className, 'image-none')} style={style}>\n            <i className=\"fa fa-file-o\" />\n        </div>;\n    }\n    if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} \n        style={style}\n        onError={evt=>evt.currentTarget.src=altImage} />;\n}\n","export * from './CApp';\nexport * from './startApp';\nexport * from './cUq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if (this.isFirst===true && len>this.firstSize ||\n            this.isFirst===false && len>this.pageSize)\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import { Uq, Field, ArrFields, FieldMap } from './uq';\nimport { Tuid } from './tuid';\nimport { UqApi } from '../../net';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    protected uq: Uq;\n    protected schema: any;\n    private jName: string;\n    sys?: boolean;\n    readonly name: string;\n    readonly typeId: number;\n    protected uqApi: UqApi;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(uq:Uq, name:string, typeId:number) {\n        this.uq = uq;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n        this.uqApi = this.uq.uqApi;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    //getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = await this.uq.loadEntitySchema(this.name);\n        this.setSchema(schema);\n        this.buildFieldsTuid();\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        if (this.schema !== undefined) return;\n        this.schema = schema;\n        let {name} = schema;\n        if (name !== this.name) this.jName = name;\n        //this.buildFieldsTuid();\n    }\n\n    public buildFieldsTuid() {\n        let {fields, arrs, returns} = this.schema;\n        this.uq.buildFieldTuid(this.fields = fields);\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.uq;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    protected buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields;\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name} = field;\n            let d = params[name];\n            let val:any;\n            switch (typeof d) {\n                default: val = d; break;\n                case 'object':\n                    let tuid = field._tuid;\n                    if (tuid === undefined) val = d.id;\n                    else val = tuid.getIdFromObj(d);\n                    break;\n            }\n            result[name] = val;\n        }\n    }\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //if (arr.isBus === true) continue;\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n\n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (typeof d) {\n            default: return d;\n            case 'object':\n                let tuid = field._tuid;\n                if (tuid === undefined) return d.id;\n                return tuid.getIdFromObj(d);\n            case 'string':\n                let len = d.length;\n                let r = '', p = 0;\n                for (let i=0;i<len;i++) {\n                    let c = d.charCodeAt(i);\n                    switch(c) {\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                    }\n                }\n                return r + d.substring(p);\n            case 'undefined': return '';\n        }\n    }\n\n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n\n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n\n    protected unpackTuidIdsOfFields(values:any[]|string, fields: Field[]):any[] {\n        if (fields === undefined) return values as any[];\n        //if (this.fields === undefined) return values as any[];\n        let ret:any[] = []\n        let len = (values as string).length;\n        let p = 0;\n        while (p<len) {\n            let ch = (values as string).charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let row = {};\n            p = this.unpackRow(row, fields, values as string, p);\n            ret.push(row);\n        }\n        return ret;\n    }\n\n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    unpackReturns(data:string):any {\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) {\n                    p = data.indexOf('\\n', c);\n                    if (p >= 0) ++p;\n                    else p = len;\n                    break;\n                }\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                ++p;\n                ++i;\n                break;\n            }\n        }\n        return p;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'time':\n                let date = new Date(Number(v));\n                return date;\n            case 'date':\n                let parts = v.split('-');\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'bigint':\n            case 'dec':\n                return Number(v);\n            case 'id':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","import { observable } from 'mobx';\nimport { isNumber } from 'util';\nimport { BoxId } from './boxId';\nimport { TuidLocal } from './tuid';\nimport { TuidDiv } from './tuidDiv'\n\nconst maxCacheSize = 1000;\n\nexport class IdCache {\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n\n    protected waitingIds: number[] = [];          // 等待loading的\n    protected tuidLocal: TuidLocal;\n\n    constructor(tuidLocal: TuidLocal) {\n        this.tuidLocal = tuidLocal;\n    }\n\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;\n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.tuidLocal.cacheTuids(defer===true?70:20);\n        //let idVal = this.createID(id);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    getValue(id:number) {\n        return this.cache.get(id);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getValue(_id);\n    }\n\n    resetCache(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.useId(id);\n    }\n\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        //let cacheVal = this.createID(id, val);\n        this.cache.set(id, val);\n        return true;\n    }\n    protected getIdFromObj(val:any) {return this.tuidLocal.getIdFromObj(val)}\n    /*\n    protected afterCacheValue(tuidValue:any) {\n        let {fields} = this.tuidLocal;\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {_tuid} = f;\n            if (_tuid === undefined) continue;\n            _tuid.useId(tuidValue[f.name]);\n        }\n    }\n    */\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let tuidValues = await this.loadIds();\n        await this.cacheIdValues(tuidValues);\n    }\n\n    private async cacheIdValues(tuidValues: any[]) {\n        if (tuidValues === undefined) return;\n        let tuids = this.unpackTuidIds(tuidValues);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n            //this.afterCacheValue(tuidValue);\n        }\n    }\n    protected divName:string = undefined;\n    protected async loadIds(): Promise<any[]> {\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, this.waitingIds);\n        return ret;\n    }\n    protected unpackTuidIds(values:any[]|string):any[] {\n        return this.tuidLocal.unpackTuidIds(values);\n    }\n    protected cacheTuidFieldValues(tuidValue: any) {\n        this.tuidLocal.cacheTuidFieldValues(tuidValue);\n    }\n\n    async assureObj(id:number):Promise<void> {\n        let val = this.cache.get(id);\n        switch (typeof val) {\n            case 'object': return;\n            case 'number': this.cache.set(id, id); break;\n        }\n        let ret = await this.tuidLocal.loadTuidIds(this.divName, [id]);\n        await this.cacheIdValues(ret);\n    }\n}\n\nexport class IdDivCache extends IdCache {\n    private div: TuidDiv;\n    protected divName:string;\n\n    constructor(tuidLocal:TuidLocal, div: TuidDiv) {\n        super(tuidLocal);\n        this.div = div;\n        this.divName = div.name;\n    }\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\n    protected unpackTuidIds(values:any[]|string):any[] {\n        return this.div.unpackTuidIds(values);\n    }\n    protected cacheTuidFieldValues(tuidValue: any) {\n        this.div.cacheTuidFieldValues(tuidValue);\n    }\n    /*\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let tuidValues = await this.loadIds();\n        if (tuidValues !== undefined) {\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\n            for (let tuidValue of tuids) {\n                if (this.cacheValue(tuidValue) === false) continue;\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\n                this.afterCacheValue(tuidValue);\n            }\n        }\n    }\n    */\n}\n","import { BoxId, BoxDivId } from './boxId';\nimport { Tuid } from './tuid';\nimport { TuidDiv } from './tuidDiv';\nimport { Field } from '../uq';\n\n// field._tuid 用这个接口\n// Tuid, TuidDiv 实现这个接口\nexport class TuidBox {\n    tuid: Tuid;\n    ownerField:Field = undefined;\n    constructor(tuid: Tuid) {\n        this.tuid = tuid;\n    }\n\n    boxId(id:number):BoxId {\n        return this.tuid.boxId(id);\n    }\n    getIdFromObj(obj:any):number {\n        return this.tuid.getIdFromObj(obj);\n    }\n    useId(id:number):void {\n        return this.tuid.useId(id);\n    }\n    async showInfo() {\n        alert('showInfo not implemented');\n    }\n}\n\nexport class TuidBoxDiv extends TuidBox {\n    ownerField: Field;\n    private div: TuidDiv;\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\n        super(tuid);\n        this.div = div;\n        this.ownerField = ownerField;\n    }\n\n    boxId(id:number):BoxId {\n        return this.div.boxId(id);\n    }\n    getIdFromObj(obj:any):number {\n        return this.div.getIdFromObj(obj);\n    }\n    useId(id:number):void {\n        return this.div.useId(id);\n    }\n}\n","import * as React from 'react';\nimport { Tuid, TuidLocal } from './tuid';\nimport { TuidDiv } from './tuidDiv';\nimport { TvTemplet } from '../../tools';\nimport { PureJSONContent } from '../../controllers';\n\nexport class BoxId {\n    readonly id: number;\n    //obj?: any;\n    //content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\n    //valueFromFieldName: (fieldName:string)=>BoxId|any;\n    //_$com?: any;\n    //_$tuid?: TuidBase;\n    //getObj: ()=>any;\n    protected tuid: Tuid;\n    get obj():any {\n        return this.tuid.valueFromId(this.id);\n    }\n\n    constructor(tuid: Tuid, id: number) {\n        this.tuid = tuid;\n        this.id = id;\n    }\n\n    render(ui:TvTemplet, x:any):JSX.Element {\n        if (this.id === undefined || this.id === null) return;\n        let boxName = this.boxName(); // this.tuid.name;\n        let val = this.obj; // this.tuid.valueFromId(this.id);\n        if (this.isUndefined() === true) {\n            if (ui !== undefined) return ui(val, x);\n            return PureJSONContent(val, x);\n        }\n        switch (typeof val) {\n            case 'undefined':\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\n            case 'number':\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\n        }\n        if (ui === undefined) {\n            ui = this.ui();\n        }\n        if (ui !== undefined) {\n            let ret = ui(val, this.res());\n            if (ret !== undefined) return ret;\n            return <del className=\"text-danger\">{boxName} {this.id}</del>;\n        }\n\n        return PureJSONContent(val);\n    }\n\n    boxName():string {return this.tuid.name}\n    //valueFromId(): any {return this.tuid.valueFromId(this.id)}\n    isUndefined(): boolean {return this.tuid === undefined}\n    ui(): TvTemplet {return this.tuid.ui}\n    res(): any {return this.tuid.res}\n\n    async assure(): Promise<void> {\n        await this.tuid.assureBox(this.id);\n    }\n}\n\nexport class BoxDivId extends BoxId {\n    private div: TuidDiv;\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\n        super(tuid, id);\n        this.div = div;\n    }\n    get obj():any {\n        return this.div.valueFromId(this.id);\n    }\n    boxName():string {return this.div.name}\n    //valueFromId(): any {return this.div.valueFromId(this.id)}\n    isUndefined(): boolean {return this.div === undefined}\n    ui(): TvTemplet {return this.div.ui}\n    res(): any {return this.div.res}\n\n    async assure(): Promise<void> {\n        await this.div.assureBox(this.id);\n    }\n\n/*\n    render(ui:TvTemplet, x:any):JSX.Element {\n        if (this.id === undefined || this.id === null) return;\n        //let {name} = this.tuid;\n        let boxName = this.div.name;\n        let val = this.div.valueFromId(this.id);\n        if (this.div === undefined) {\n            if (ui !== undefined) return ui(val, x);\n            return PureJSONContent(val, x);\n        }\n        switch (typeof val) {\n            case 'undefined':\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\n            case 'number':\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\n        }\n        if (ui === undefined) {\n            ui = this.div.ui;\n        }\n        if (ui !== undefined) {\n            return PureJSONContent(val);\n        }\n\n        let ret = ui(val, this.div.res);\n        if (ret !== undefined) return ret;\n        return <del className=\"text-danger\">{boxName} {this.id}</del>;\n    }\n*/\n}\n","import { Tuid, TuidLocal } from './tuid';\nimport { IdCache, IdDivCache } from './idCache';\nimport { TuidBox, TuidBoxDiv } from './tuidBox';\nimport { BoxId, BoxDivId } from './boxId';\nimport { Field, Uq } from '../uq';\nimport { Entity } from '../entity';\n\nexport class TuidDiv extends Entity {\n    readonly typeName = 'div';\n    private cacheFields: Field[];\n    protected tuid: TuidLocal;\n    protected idName: string;\n    protected idCache: IdDivCache;;\n\n    ui: React.StatelessComponent<any>;\n    res: any;\n\n    constructor(uq: Uq, tuid: TuidLocal, name: string) {\n        super(uq, name, 0);\n        this.tuid = tuid;\n        this.idName = 'id';\n        this.idCache = new IdDivCache(tuid, this);\n    }\n\n    get owner() {return this.tuid}\n\n    /*\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.buildFieldsTuid();\n    }*/\n\n    setUIRes(ui:any, res:any) {\n        this.ui = ui && ui.content;\n        this.res = res;\n    }\n\n    buildFieldsTuid() {\n        super.buildFieldsTuid();\n        let {mainFields} = this.schema;\n        if (mainFields === undefined) debugger;\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\n    }\n\n    buildTuidBox(ownerField: Field): TuidBox {\n        return new TuidBoxDiv(this.tuid, this, ownerField);\n    }\n\n    getIdFromObj(obj:any):number {return obj[this.idName]}\n    cacheValue(value:any):void {\n        this.idCache.cacheValue(value);\n    }\n\n    useId(id:number, defer?:boolean):void {\n        this.idCache.useId(id, defer);\n    }\n\n    boxId(id:number):BoxId {\n        if (typeof id === 'object') return id;\n        this.useId(id);\n        return new BoxDivId(this.tuid, this, id);\n    }\n\n    valueFromId(id:number):any {\n        return this.idCache.getValue(id)\n    }\n\n    async assureBox(id:number):Promise<void> {\n        await this.idCache.assureObj(id);\n    }\n\n    async cacheIds() {\n        await this.idCache.cacheIds();\n    }\n\n    cacheTuidFieldValues(values:any) {\n        let fields = this.schema.fields;\n        this.cacheFieldsInValue(values, fields);\n    }\n\n    unpackTuidIds(values:any[]|string):any[] {\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\n    }\n}\n","import _ from 'lodash';\nimport { Entity } from '../entity';\nimport { IdCache } from './idCache';\nimport { TuidDiv } from './tuidDiv';\nimport { Uq, ArrFields, Field, SchemaFrom } from '../uq';\nimport { TuidBox } from './tuidBox';\nimport { BoxId } from './boxId';\n\nexport interface TuidSaveResult {\n    id: number;\n    inId: number;\n}\n\nexport abstract class Tuid extends Entity {\n    readonly typeName = 'tuid';\n    private idName: string;\n    unique: string[];\n    ui: React.StatelessComponent<any>;\n    res: any;\n\n    constructor(uq:Uq, name:string, typeId:number) {\n        super(uq, name, typeId)\n    }\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id} = schema;\n        this.idName = id;\n    }\n\n    buildTuidBox(): TuidBox {\n        return new TuidBox(this);\n    }\n    \n    setUIRes(ui:any, res:any) {\n        //this.ui = (ui as TuidUI).content;\n        this.ui = ui.content;\n        this.res = res;\n    }\n\n    getIdFromObj(obj:any):number {return obj[this.idName]}\n    abstract useId(id:number):void;\n    abstract boxId(id:number):BoxId;\n    abstract valueFromId(id:number):any;\n    abstract async assureBox(id:number):Promise<void>;\n    cacheIds() {}\n    isImport = false;\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\n    abstract div(name:string):TuidDiv;\n    abstract async load(id:number|BoxId):Promise<any>;\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\n}\n\nexport class TuidLocal extends Tuid {\n    private idCache: IdCache = new IdCache(this);\n    private cacheFields: Field[];\n    private divs: {[div:string]: TuidDiv};\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.uq, this, name);\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n                tuidDiv.buildFieldsTuid();\n            }\n        }\n    }\n    \n    setUIRes(ui:any, res:any) {\n        super.setUIRes(ui, res);\n        if (this.divs === undefined) return;\n        //let uiDivs = (ui as TuidUI).divs;\n        let uiDivs = ui.divs;\n        if (uiDivs === undefined) return;\n        for (let i in this.divs) {\n            this.divs[i].setUIRes(uiDivs[i], res);\n        }\n    }\n\n    useId(id:number, defer?:boolean) {\n        this.idCache.useId(id, defer);\n    }\n    boxId(id:number):BoxId {\n        if (typeof id === 'object') return id;\n        this.useId(id);\n        return new BoxId(this, id);\n    }\n    valueFromId(id:number) {return this.idCache.getValue(id)}\n    async assureBox(id:number):Promise<void> {\n        await this.idCache.assureObj(id);\n    }\n\n    cacheIds() {\n        this.idCache.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) this.divs[i].cacheIds();\n    }\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\n    get hasDiv():boolean {return this.divs!==undefined}\n    div(name:string):TuidDiv {\n        return this.divs && this.divs[name];\n    }\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\n        return await this.uqApi.tuidIds(this.name, divName, ids);\n    }\n    async load(id:number|BoxId):Promise<any> {\n        if (id === undefined || id === 0) return;\n        if (typeof id === 'object') id = id.id;\n        let values = await this.uqApi.tuidGet(this.name, id);\n        if (values === undefined) return;\n        for (let f of this.schema.fields) {\n            let {tuid} = f;\n            if (tuid === undefined) continue;\n            let t = this.uq.getTuid(tuid);\n            if (t === undefined) continue;\n            let n = f.name;\n            values[n] = t.boxId(values[n]);\n        }\n        //values._$tuid = this;\n        this.idCache.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n\n    cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.div(name);\n                for (let row of arrValues) {\n                    //row._$tuid = tuidDiv;\n                    //row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n\n    public buildFieldsTuid() {\n        super.buildFieldsTuid();\n        let {mainFields} = this.schema;\n        if (mainFields === undefined) debugger;\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\n    }\n\n    unpackTuidIds(values:any[]|string):any[] {\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\n    }\n\n    async save(id:number, props:any):Promise<TuidSaveResult> {\n        let {fields} = this.schema;\n        let params:any = {$id: id};\n        for (let field of fields as Field[]) {\n            let {name, tuid, type} = field;\n            let val = props[name];\n            if (tuid !== undefined) {\n                if (typeof val === 'object') {\n                    if (val !== null) val = val.id;\n                }\n            }\n            else {\n                switch (type) {\n                    case 'date':\n                    case 'datetime':\n                        val = new Date(val).toISOString();\n                        val = (val as string).replace('T', ' ');\n                        val = (val as string).replace('Z', '');\n                        break;\n                }\n            }\n            params[name] = val;\n        }\n        let ret = await this.uqApi.tuidSave(this.name, params);\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let {fields} = this.schema;\n        let api = this.uqApi;\n        let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = this.uqApi;\n        return await api.tuidArrGet(this.name, arr, owner, id);\n    }\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\n    }\n\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\n    }\n}\n\nexport class TuidImport extends Tuid {\n    private tuidLocal: TuidLocal;\n\n    constructor(uq:Uq, name:string, typeId:number, from: SchemaFrom) {\n        super(uq, name, typeId);\n        this.from = from;\n    }\n\n    setFrom(tuidLocal: TuidLocal) {this.tuidLocal = tuidLocal}\n    \n    readonly from: SchemaFrom;\n    isImport = true;\n\n    useId(id:number) {this.tuidLocal.useId(id);}\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\n    async assureBox(id:number):Promise<void> {\n        await this.tuidLocal.assureBox(id);\n    }\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\n    async load(id:number|BoxId):Promise<any> {\n        return await this.tuidLocal.load(id);\n    }\n    async save(id:number, props:any):Promise<TuidSaveResult> {\n        return await this.tuidLocal.save(id, props);\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        return await this.tuidLocal.search(key, pageStart, pageSize);\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        return await this.tuidLocal.loadArr(arr, owner, id);\n    }\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\n        await this.tuidLocal.saveArr(arr, owner, id, props);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\n        await this.tuidLocal.posArr(arr, owner, id, order);\n    }\n}\n","import {Entity} from './entity';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        await this.loadSchema();\n        let text = this.pack(data);\n        return await this.uqApi.action(this.name, {data:text});\n    }\n    async submitReturns(data:object):Promise<{[ret:string]:any[]}> {\n        await this.loadSchema();\n        let text = this.pack(data);\n        let result = await this.uqApi.actionReturns(this.name, {data:text});\n        let len = this.returns.length;\n        let ret:{[r:string]:any[]} = {};\n        for (let i=0; i<len; i++) {\n            let retSchema = this.returns[i];\n            ret[retSchema.name] = result[i];\n        }\n        return ret;\n    }\n}\n","import { Entity } from './entity';\nimport { PageItems } from '../../pageItems';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        await this.loadSchema();\n        let {id} = this.uq;\n        let text = this.pack(data);\n\n        let ret = await this.uqApi.sheetSave(this.name, {app: id, discription: discription, data:text});\n        return ret;\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        await this.loadSchema();\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n    }\n    private unpack(data:any):any {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.uqApi.getSheet(this.name, id);\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.uqApi.sheetArchive(this.name, id)\n        return this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        await this.loadSchema();\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        await this.loadSchema();\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {observable, IObservableArray} from 'mobx';\nimport {Field, ArrFields} from './uq';\nimport {Entity} from './entity';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        //this.returns = returns;\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw 'call resetPage(size:number, params:any) first';\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        let data = this.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n    async query(params:any):Promise<any> {\n        await this.loadSchema();\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\n        let data = this.unpackReturns(res);\n        return data;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\nimport { Field } from './uq';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.uq.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let actionSchema = actions[i];\n            let {name} = actionSchema;\n            let action = this.uq.newAction(name, undefined);\n            action.setSchema(actionSchema);\n            action.buildFieldsTuid();\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let querySchema = queries[i];\n            let {name} = querySchema;\n            let query = this.uq.newQuery(name, undefined);\n            query.setSchema(querySchema);\n            query.buildFieldsTuid();\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n    }\n\n    async del(param:any) {\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n    }\n\n    async all() {\n        await this.loadSchema();\n        return await this.queries.all.query({});\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n    }\n\n    async query(param:any) {\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import {Tuid, TuidDiv, TuidImport, TuidLocal, TuidBox} from './tuid';\nimport {Action} from './action';\nimport {Sheet} from './sheet';\nimport {Query} from './query';\nimport {Book} from './book';\nimport {History} from './history';\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../../net';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { UqApp } from './uqApp';\n\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text':\n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _tuid: TuidBox;\n    /*\n    _ownerField: Field;\n    _tuid: Tuid;\n    _div: TuidDiv;\n    */\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n    //isBus?: boolean;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\nexport interface SchemaFrom {\n    owner:string;\n    uq:string;\n}\n\nclass TuidsCache {\n    private cacheTimer: any;\n    private tuids: {[name:string]: Tuid};\n    constructor(tuids: {[name:string]: Tuid}) {\n        this.tuids = tuids;\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.cacheIds();\n        }\n    }\n}\n\nexport class Uq {\n    private tuids: {[name:string]: Tuid} = {};\n    private actions: {[name:string]: Action} = {};\n    private sheets: {[name:string]: Sheet} = {};\n    private queries: {[name:string]: Query} = {};\n    private books: {[name:string]: Book} = {};\n    private maps: {[name:string]: Map} = {};\n    private histories: {[name:string]: History} = {};\n    private pendings: {[name:string]: Pending} = {};\n    private tuidsCache: TuidsCache;\n    private uqApp: UqApp;\n\n    name: string;\n    uqApi: UqApi;\n    id: number;\n\n    constructor(uqApp: UqApp, uqData: UqData) {\n        this.uqApp = uqApp;\n        this.tuidsCache = new TuidsCache(this.tuids);\n        let {id, uqOwner, uqName, access} = uqData;\n        this.id = id;\n        this.name = uqOwner + '/' + uqName;\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        if (this.name === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            this.uqApi = new UnitxApi(appInFrame.unit);\n        }\n        else {\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        //this.entities = new Uq(this, uqApi, appId);\n    }\n\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\n    tuidDiv(name:string, div:string):TuidDiv {\n        let tuid = this.tuids[name.toLowerCase()]\n        return tuid && tuid.div(div.toLowerCase());\n    }\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: Tuid[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    /*\n    private schemaLoaded:boolean = false;\n    async loadSchema(): Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.init();\n            await this.loadAccess();\n            this.schemaLoaded = true;\n        }\n        catch (err) {\n            console.error(err);\n            return err;\n        }\n    }*/\n\n    async init() {\n        await this.uqApi.init();\n    }\n\n    async loadAccess() {\n        let accesses = await this.uqApi.loadAccess();\n        if (accesses === undefined) return;\n        this.buildEntities(accesses);\n    }\n\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n\n    private buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        let {access, tuids} = entities;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    async checkAccess() {\n        return await this.uqApi.checkAccess();\n    }\n\n    async loadEntitySchema(entityName: string): Promise<any> {\n        return await this.uqApi.schema(entityName);\n    }\n\n    getTuid(name:string): Tuid {\n        return this.tuids[name];\n    }\n\n    private buildTuids(tuids:any) {\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name, typeId, from} = schema;\n            let tuid = this.newTuid(i, typeId, from);\n            tuid.sys = true;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let tuid = this.getTuid(i);\n            tuid.setSchema(schema);\n        }\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.buildFieldsTuid();\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n        /*\n        for (let tuid of this.tuidArr) {\n            tuid.setProxies(this);\n        }*/\n    }\n\n    cacheTuids(defer:number) {\n        this.tuidsCache.cacheTuids(defer);\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        if (from !== undefined)\n            tuid = new TuidImport(this, name, id, from);\n        else\n            tuid = new TuidLocal(this, name, id);\n        this.tuids[name] = tuid;\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    private newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    private newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    private newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    private newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            //case 'uq': this.id = id; break;\n            case 'tuid':\n                // Tuid should not be created here!;\n                //let tuid = this.newTuid(name, id);\n                //tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n        /*\n        let states = sheet.states;\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    /*\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }*/\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid} = f;\n            if (tuid === undefined) continue;\n            let t = this.getTuid(tuid);\n            if (t === undefined) continue;\n            f._tuid = t.buildTuidBox();\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    debugger;\n                    throw `owner field ${owner} is undefined`;\n                }\n            }\n            //f._ownerField = ownerField;\n            //let {arr} = f;\n            let {arr, tuid} = f;\n            let t = this.getTuid(ownerField._tuid.tuid.name);\n            if (t === undefined) continue;\n            let div = t.div(arr || tuid);\n            f._tuid = div && div.buildTuidBox(ownerField);\n            if (f._tuid === undefined) {\n                debugger;\n                throw 'owner field ${owner} is not tuid';\n            }\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n}\n","import { Uq } from './uq';\nimport { TuidImport, TuidLocal } from './tuid';\n//import { loadAppUqs } from '../../net';\n\nexport class UqApp {\n    name: string;\n    id: number;\n    appOwner: string;\n    appName: string;\n    private collection: {[uqName: string]: Uq} = {};\n\n    constructor(tonvaAppName:string) {\n        this.name = name;\n        let parts = tonvaAppName.split('/');\n        if (parts.length !== 2) {\n            throw 'tonvaApp name must be / separated, owner/app';\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n    }\n\n    addUq(uq: Uq) {\n        this.collection[uq.name] = uq;\n    }\n\n    setTuidImportsLocal() {\n        for (let i in this.collection) {\n            let uq = this.collection[i];\n            for (let tuid of uq.tuidArr) {\n                if (tuid.isImport === true) {\n                    this.setLocal(tuid as TuidImport);\n                }\n            }\n        }\n    }\n\n    private setLocal(tuidImport: TuidImport) {\n        let {from} = tuidImport;\n        let uq = this.collection[from.owner + '/' + from.uq];\n        if (uq === undefined) {\n            //debugger;\n            return;\n        }\n        let tuid = uq.tuid(tuidImport.name);\n        if (tuid === undefined) {\n            //debugger;\n            return;\n        }\n        if (tuid.isImport === true) {\n            //debugger;\n            return;\n        }\n        tuidImport.setFrom(tuid as TuidLocal);\n    }\n\n    /*\n    async load(): Promise<string[]> {\n        let uqAppData = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = uqAppData;\n        this.id = id;\n\n        let retErrors:string[] = [];\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        for (let uqData of uqs) {\n            //let {id:uqId, uqOwner, uqName, access} = uqData;\n            //let uqn = uqOwner + '/' + uqName;\n            let uq = new Uq(this, uqData);\n            this.collection[uq.name] = uq;\n            promises.push(uq.loadSchema());\n            promiseChecks.push(uq.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    //debugger;\n                    //nav.start();\n                    //return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n    */\n}\n","export * from './uq';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './uqApp';","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Rule, FieldRule } from '../form/rules';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected error: string;\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n\n    protected verifyValue() {\n        if (this.uiItem === undefined) return;\n        let {rules} = this.uiItem;\n        if (rules === undefined) return;\n        let nv = this.newValue;\n        function verifyRule(rule:FieldRule, value: any):string {\n            let error = rule(nv);\n            if (error !== undefined) {\n                if (typeof error !== 'object')\n                    return error;\n                else\n                    return JSON.stringify(error);\n            }\n        }\n        if (Array.isArray(rules)) {\n            for (let rule of rules) {\n                let error = verifyRule(rule as FieldRule, nv);\n                if (error !== undefined) {\n                    this.error = error;\n                    break;\n                }\n            }\n        }\n        else {\n            this.error = verifyRule(rules as FieldRule, nv);\n        }\n    }\n}\n","import * as React from 'react';\nimport { Page, SearchBox, List, Muted, LMR } from '../../../ui';\nimport { Tuid, Entity } from '../../uqs';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, isImport} = this.controller;\n        let newButton:any;\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\n        let right = <>\n            {newButton}\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\n        </>;\n        let content = <LMR className='m-3' right={right}>\n            <SearchBox className=\"w-100\" size=\"md\"\n                onSearch={this.onSearch} \n                placeholder={'搜索'+label} />\n        </LMR>;\n        return () => <Page header={label}>\n            {content}\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { Page, FA } from '../../../ui';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { Tuid } from '../../uqs';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { nav, Page, SearchBox, List } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../uqs';\nimport { CTuid, TuidUI } from './cTuid';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.hasDiv === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","import * as React from 'react';\nimport { FA, Page } from '../../../ui';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../uqs';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import { PageItems } from '../../../pageItems';\nimport { Tuid } from '../../uqs';\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA, SearchBox, List, Page, VPage } from '../../../ui';\nimport { jsonStringify } from '../../tools';\nimport { Tuid, TuidDiv } from '../../uqs';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\nimport { JSONContent, RowContent } from '../form/viewModel';\n\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        //if (this.entity.owner !== undefined) \n        this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        /*\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        */\n        return <Page header={header}>\n            {/*ownerTop*/}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidList extends VTuidListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isImport === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n/*\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n*/","import _ from 'lodash';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { Tuid, TuidDiv } from '../../uqs';\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from '../cUq/cUq';\n//import { CLink } from '../link';\nimport { VTuidInfo } from './vTuidInfo';\nimport { TuidPageItems } from './pageItems';\nimport { VTuidList } from './vTuidList';\nimport { PageItems } from '../../../pageItems';\n//import { Controller } from 'ui';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport abstract class CTuidBase extends CTuid<Tuid> {\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n    }\n    \n    from():CTuidBase {\n        let ret = this; // this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    cUqFrom():CUq {\n        return this.cUq; // this.entity.cUqFrom();\n    }\n    cEditFrom(): CTuidEdit {\n        let cUq = this.cUq; // this.entity.cUqFrom();\n        return cUq.cTuidEditFromName(this.entity.name);\n    }\n    cInfoFrom(): CTuidInfo {\n        let cUq = this.cUq; // this.entity.cUqFrom();\n        return cUq.cTuidInfoFromName(this.entity.name);\n    }\n    cSelectFrom(): CTuidSelect {\n        let cUq = this.cUq;// this.entity.cUqFrom();\n        return cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    isImport: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidList {return VTuidList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isImport = this.entity.isImport;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        //let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': await this.onNew(); break;\n            case 'list': await this.onList(); break;\n            case 'edit': await this.onEdit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        //await this.openVPage(v, value);\n    }\n\n    protected async edit(values:any) {\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\n        if (cTuidEdit === undefined) {\n            await this.openVPage(this.VTuidEdit, values);\n        }\n        else {\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\n        }\n    }\n\n    private async onNew() {\n        await this.edit(undefined);\n    }\n\n    private async onList() {\n        let cTuidList = this.ui && this.ui.CTuidList;\n        if (cTuidList === undefined) {\n            await this.openVPage(this.VTuidList, undefined);\n        }\n        else {\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\n        }\n    }\n\n    protected async onEdit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        this.edit(values);\n        //await this.openVPage(this.VTuidEdit, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidMain extends CTuidBase {\n    protected async internalStart(param?:any):Promise<void> {\n        this.isImport = this.entity.isImport;\n        await this.openVPage(this.VTuidMain);\n    }\n\n}\n\nexport class CTuidEdit extends CTuidBase {\n    protected async internalStart(id:number):Promise<void> {\n        this.isImport = this.entity.isImport;\n        if (typeof(id) === 'number') {\n            await this.onEdit(id);\n        }\n        else {\n            await this.edit(id);\n        }\n    }\n\n    protected async edit(values:any) {\n        await this.openVPage(this.VTuidEdit, values);\n    }\n}\n\nexport class CTuidList extends CTuidBase {\n    protected async internalStart(id:number):Promise<void> {\n        this.isImport = this.entity.isImport;\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<Tuid> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ' + '??');\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\nexport * from './vTuidSelect';\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames'\nimport { ViewModel } from './viewModel';\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed, action } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from '../../../../ui';\nimport { ViewModel } from '../viewModel';\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../uqs';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || this.field !== undefined && this.field.null === false) {\n            this.rules.push(new RuleRequired);\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            mode === FormMode.edit && this.fieldUI.editable === false;\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum);\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (ret === NaN)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) == v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt);\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n\nexport class VDateField extends VStringField {\n\n}\n","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../uqs';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\nimport { IObservableArray, observable } from 'mobx';\nimport _ from 'lodash';\nimport { Page, nav, List, FA, Muted } from '../../../ui';\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields, Field } from '../../uqs';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../../tools';\nimport { Field, Tuid, TuidBox } from '../../../uqs';\nimport { VField, RedMark } from './vField';\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput, FormMode } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: TuidBox;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(); //this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        //let {_ownerField} = this.field;\n        let {_tuid} = this.field;\n        let {ownerField} = _tuid;\n        if (ownerField !== undefined) {\n            let {name, arr} = ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || this.input.placeHolder}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let {required} = this.fieldUI;\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from './vBand';\nimport { Field, ArrFields } from '../../uqs';\nimport { VForm, FormOptions } from './vForm';\nimport { FormItems, FieldUI, FormItem } from '../formUI';\nimport { VSubmit } from './vSubmit';\nimport { VField, buildVField, VComputeField } from './vField';\nimport { VArr } from './vArr';\nimport { VTuidField } from './vField/vTuidField';\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name, fields} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\nimport { Field } from '../../../uqs';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n            vField = VIntField;\n            break;\n        case 'id':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n        case 'date':\n            vField = VDateField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../uqs';\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from '../../../ui';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(this, values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields, id, order} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","export * from './vForm';\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from '../fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../ui/nav';\nimport { isDevelopment } from './host';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private isCenter: boolean;\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.isCenter = isCenter;\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\n        navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {nav} from './nav';\n\nexport interface PageHeaderProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>Promise<void>);\n    className?: string;\n}\nexport interface PageHeaderState {\n    hasBack: boolean;\n}\n\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\n    constructor(props: PageHeaderProps) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.showLogout(this.logout);\n    }\n    private logout = async () => {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            await logout(); \n        }\n        await nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || self != top;\n        let {right, center, logout, className} = this.props;\n        let back:any, pop:any, debugLogout:any;\n        if (logout !== undefined && self === top) {\n            if (typeof logout === 'boolean' && logout === true\n                || typeof logout === 'function')\n            {\n                let {user} = nav;\n                if (user !== undefined) {\n                    let {nick, name} = user;\n                    debugLogout = <div className=\"d-flex align-items-center\">\n                        <small className=\"text-light\">{nick || name}</small>\n                        <a className=\"btn ml-2 cursor-pointer\"\n                            role=\"button\"\n                            onClick={this.logoutClick}>\n                            <i className=\"fa fa-sign-out\" />\n                        </a>\n                    </div>;\n                }\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (self != top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\n        return <header className={className}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import React from 'react';\nimport { jsonStringify } from '../../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page, List, FA } from '../../../ui';\nimport { Query } from '../../uqs';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {name, list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { Page, FA, SearchBox, List } from '../../../ui';\nimport { PageItems } from '../../../pageItems';\nimport { Query } from '../../uqs';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from 'react';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { Query } from '../../uqs';\nimport { VQueryMain } from './vQueryMain';\nimport { VQuerySelect } from './vQuerySelect';\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId: string;\n    @observable private overSize: boolean = false;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;        \n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        let ret = await this.resUploader.upload();\n        if (ret === null) {\n            this.overSize = true;\n            setTimeout(() => this.overSize = false, 3000);\n            return;\n        }\n        this.resId = ret;\n        this.isChanged = (this.resId != this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        let overSize:any;\n        if (this.overSize === true) {\n            overSize = <div className=\"text-danger\">\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\n            </div>;\n        }\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>\n                    <div>上传图片：</div>\n                    <div className=\"my-3\">\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\n                    </div>\n                    <div>\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\n                    </div>\n                </div>\n                {overSize}\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"w-12c h-12c mr-4\"\n                        style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-100 h-100\" src={this.resId} />\n                    </div>\n                    <div>\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import {CenterApiBase} from '../net';\nimport {User, decodeUserToken} from '../user';\n//import { nav } from '../ui';\n\nexport interface RegisterParameter {\n    nick:string, \n    user:string, \n    pwd:string,\n    country:number, \n    mobile:number, \n    mobileCountry:number,\n    email:string,\n    verify:string,\n};\n\nexport class UserApi extends CenterApiBase {\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\n        //(params as any).device = nav.local.device.get();\n        let ret = await this.get('login', params);\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeUserToken(ret);\n            case 'object':\n                let token = ret.token;\n                let user = decodeUserToken(token);\n                let {nick, icon} = ret;\n                if (nick) user.nick = nick;\n                if (icon) user.icon = icon;\n                return user;\n        }\n        // !== undefined) return decodeToken(token);\n    }\n    async register(params: RegisterParameter): Promise<any>\n    {\n        return await this.post('register', params);\n    }\n\n    async setVerify(account:string, type:'mobile'|'email') {\n        return await this.post('set-verify', {account:account, type:type});\n    }\n\n    async checkVerify(account:string, verify:string) {\n        return await this.post('check-verify', {account:account, verify:verify});\n    }\n\n    async isExists(account:string) {\n        return await this.get('is-exists', {account:account});\n    }\n\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\n        return await this.post('reset-password', {account:account, password, verify, type});\n    }\n    \n    async userSetProp(prop:string, value:any) {\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\n    }\n}\n\nexport const userApi = new UserApi('tv/user/', undefined);\n","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n\n/*\nexport function Loading() {\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\n        加载中...\n    </div>\n    </div>\n}\n*/\n\n\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    className?: string;\n    multiple?: boolean;\n    maxSize?: number;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let {maxSize} = this.props;\n        if (maxSize === undefined || maxSize <= 0) \n            maxSize = 100000000000;\n        else\n            maxSize = maxSize * 1024;\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            if (file.size > maxSize) return null;\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { List, LMR, FA, Page, nav, Controller, TypeVPage, VPage, resLang, NavSettings} from '../../ui';\nimport { loadAppUqs, appInFrame, getExHash, isDevelopment, UqAppData, UqData} from '../../net';\nimport { CUq, UqUI } from './cUq';\nimport { centerApi } from '../centerApi';\nimport { UqApp } from '../uqs';\n\nexport interface RoleAppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\n    res?: any;\n}\n\nexport interface AppUI extends RoleAppUI, NavSettings {\n    appName: string; // 格式: owner/appName\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\n}\n\nexport class CApp extends Controller {\n    //private appOwner:string;\n    //private appName:string;\n    name: string;\n    uqApp: UqApp;\n    private cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    appUnits:any[];\n\n    constructor(ui:AppUI) {\n        super(resLang(ui && ui.res));\n        nav.setSettings(ui);\n        this.name = ui.appName;\n        if (this.name === undefined) {\n            throw 'appName like \"owner/app\" must be defined in UI';\n        }\n        if (ui.uqs === undefined) ui.uqs = {};\n        this.ui = ui;\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    readonly caption: string; // = 'View Model 版的 Uq App';\n    cUqCollection: {[uq:string]: CUq} = {};\n\n    /*\n    async startDebug() {\n        let appName = this.appOwner + '/' + this.appName;\n        let cApp = new CApp({appName: appName, uqs:{}} );\n        let keepNavBackButton = true;\n        await cApp.start(keepNavBackButton);    \n    }\n    */\n\n    /*\n    protected async loadUqs(uqAppData:UqAppData): Promise<string[]> {\n        let retErrors:string[] = [];\n        let unit = appInFrame.unit;\n        //let app = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = uqAppData;\n        this.id = id;\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        let roleAppUI = await this.buildRoleAppUI();\n        this.ui = roleAppUI;\n        for (let appUq of uqs) {\n            let {id:uqId, uqOwner, uqName, access} = appUq;\n            let uq = uqOwner + '/' + uqName;\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\n            this.cUqCollection[uq] = cUq;\n            promises.push(cUq.loadSchema());\n            promiseChecks.push(cUq.uq.uqApi.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    //debugger;\n                    //nav.start();\n                    //return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n    */\n    /*\n    private async buildRoleAppUI():Promise<AppUI> {\n        if (!this.ui) return undefined;\n        let {hashParam} = nav;\n        if (!hashParam) return this.ui;\n        let {roles} = this.ui;\n        let roleAppUI = roles && roles[hashParam];\n        if (!roleAppUI) return this.ui;\n        let ret:AppUI = {} as any;\n        for (let i in this.ui) {\n            if (i === 'roles') continue;\n            ret[i] = this.ui[i];\n        }\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\n        _.merge(ret, roleAppUI);\n        return ret;\n    }\n    */\n\n    getImportUq(uqOwner:string, uqName:string):CUq {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\n        //this.newCUq(uq, uqId, undefined, ui || {});\n        /*\n        let retError = await cUq.loadSchema();\n        if (retError !== undefined) {\n            console.error(retError);\n            debugger;\n            return;\n        }\n        */\n        return cUq;\n    }\n\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(uq:string):CUq {\n        return this.cUqCollection[uq];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        try {\n            let retErrors = await this.load();\n            //let app = await loadAppUqs(this.appOwner, this.appName);\n            // if (isDevelopment === true) {\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\n            let {predefinedUnit} = appInFrame;\n            //let {id} = app;\n            //this.id = id;\n            let {user} = nav;\n            if (user !== undefined && user.id > 0) {\n                this.appUnits = await centerApi.userAppUnits(this.uqApp.id);\n                switch (this.appUnits.length) {\n                    case 0:\n                        this.showUnsupport(predefinedUnit);\n                        return false;\n                    case 1:\n                        let appUnit = this.appUnits[0].id;\n                        if (appUnit === undefined || appUnit < 0 || \n                            predefinedUnit !== undefined && appUnit != predefinedUnit)\n                        {\n                            this.showUnsupport(predefinedUnit);\n                            return false;\n                        }\n                        appInFrame.unit = appUnit;\n                        break;\n                    default:\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\n                            appInFrame.unit = predefinedUnit;\n                            break;\n                        }\n                        nav.push(<this.selectUnitPage />)\n                        return false;\n                }\n            }\n            //}\n\n            //let retErrors = await this.loadUqs(app);\n            if (retErrors !== undefined) {\n                this.openPage(<Page header=\"ERROR\">\n                    <div className=\"m-3\">\n                        <div>Load Uqs 发生错误：</div>\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\n                    </div>\n                </Page>);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            nav.push(<Page header=\"App start error!\">\n                <pre>\n                    {typeof err === 'string'? err : err.message}\n                </pre>\n            </Page>);\n            return false;\n        }\n    }\n\n    private async load(): Promise<string[]> {\n        this.uqApp = new UqApp(this.name);\n        let {appOwner, appName} = this.uqApp;\n        let uqAppData = await loadAppUqs(appOwner, appName);\n        let {id, uqs} = uqAppData;\n        this.uqApp.id = id;\n\n        let retErrors:string[] = [];\n\n        let promiseInits: PromiseLike<void>[] = [];\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        for (let uqData of uqs) {\n            let {id, uqOwner, uqName, access} = uqData;\n            let uqFullName = uqOwner + '/' + uqName;\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\n            let cUq = this.newCUq(uqData, uqUI);\n            this.cUqCollection[uqFullName] = cUq;\n            this.uqApp.addUq(cUq.uq);\n            promiseInits.push(cUq.init());\n        }\n        await Promise.all(promiseInits);\n\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            promises.push(cUq.loadEntities());\n            promiseChecks.push(cUq.checkEntities());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    //debugger;\n                    //nav.start();\n                    //return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) {\n            this.uqApp.setTuidImportsLocal();\n            return;\n        }\n        return retErrors;\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport(predefinedUnit: number) {\n        this.clearPrevPages();\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        let {appOwner, appName} = this.uqApp;\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\n                    <div className=\"col-sm text-body\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">\n                        可能原因<FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col-sm text-body\">\n                        <ul className=\"p-0\">\n                            <li>没有小号运行 {this.ui.appName}</li>\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\n                            {\n                                predefinedUnit && \n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\n                            }\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\n                    <div className=\"col-sm text-body\">\n                        预设小号定义在 public/unit.json 文件中。\n                        定义了这个文件的程序，只能由url直接启动。\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\n                        如果要删去缓存的预定义Unit，logout然后再login。\n                    </div>\n                </div>\n            </div>\n        </Page>)\n    }\n\n    private async showMainPage() {\n        // #tv-RwPBwMef-23-sheet-api-108\n        let exHash = getExHash();\n        if (exHash !== undefined) {\n            let parts = exHash.split('-');\n            if (parts.length > 3) {\n                let action = parts[3];\n                // sheet_debug 表示centerUrl是debug方式的\n                if (action === 'sheet' || action === 'sheet_debug') {\n                    let uqId = Number(parts[4]);\n                    let sheetTypeId = Number(parts[5]);\n                    let sheetId = Number(parts[6]);\n                    let cUq = this.getCUqFromId(uqId);\n                    if (cUq === undefined) {\n                        alert('unknown uqId: ' + uqId);\n                        return;\n                    }\n                    this.clearPrevPages();\n                    await cUq.navSheet(sheetTypeId, sheetId);\n                    return;\n                }\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.uq.id === uqId) return cUq;\n        }\n        return;\n    }\n\n    renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    onRowClick = async (item: any) => {\n        appInFrame.unit = item.id; // 25;\n        await this.start();\n    }\n\n    protected selectUnitPage = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nclass VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage = () => {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n","import React from 'react';\nimport { FA } from '../../ui';\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from '../../ui';\nimport { CUq } from './cUq';\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","import {CenterApiBase} from '../net';\n\n//\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page, List, Muted, LMR } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uqs';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from '../../../ui';\nimport { Sheet } from '../../uqs';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from '../../../ui';\nimport { Sheet } from '../../uqs';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, user, preState, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from '../../../ui';\nimport { VForm, FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { FA, Page } from '../../../ui';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uqs';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page, List, LMR, FA, EasyDate, Muted } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uqs';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {id, no, discription, date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, nav, List, Muted, FA, LMR, EasyDate } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uqs';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {id, no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { Page } from '../../../ui';\nimport { VSheetView } from './vSheetView';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nexport interface SheetStateFlows {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + ':' + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import { Sheet } from '../../uqs';\nimport { SheetUI, CSheet } from './cSheet';\nimport { VEntity } from '../CVEntity';\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import * as React from 'react';\nimport { Page, FA } from '../../../ui';\nimport { VSheet } from './vSheet';\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import React from 'react';\nimport { nav, Page } from '../../../ui';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from 'mobx';\nimport { postWsToTop } from '../../../net';\nimport { TypeVPage, VPage } from '../../../ui';\nimport { PageItems } from '../../../pageItems'\nimport { Sheet, StateCount } from '../../uqs';\nimport { CEntity, EntityUI, VEntity } from '../CVEntity';\nimport { VSheetMain } from './vMain';\nimport { VSheetNew } from './vNew';\nimport { VSheetEdit } from './vEdit';\nimport { VSheetAction } from './vSheetAction';\nimport { VSheetSchema } from './vSchema';\nimport { VArchives } from './vArchives';\nimport { VSheetList } from './vList';\nimport { VArchived } from './vArchived';\nimport { VSheetSaved } from './vSaved';\nimport { VSheetProcessing } from './vSheetProcessing';\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to, push} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.uq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport { Book } from '../../uqs';\nimport { Page } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { Book } from '../../uqs';\nimport { VBookMain } from './vBookMain';\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from 'react';\nimport { View, List, Muted } from '../../../ui';\nimport { Entity } from '../../uqs';\nimport { CLink } from '../link';\nimport { CUq } from './cUq';\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Controller, resLang, nav } from '../../../ui';\nimport { UqApi, UnitxApi, appInFrame, UqData } from '../../../net';\nimport { Uq, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv } from '../../uqs';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../CApp';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        //this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        this.uq = new Uq(this.cApp.uqApp, uqData);\n        /*\n        let token = undefined;\n        let uqOwner:string, uqName:string;\n        let p = uq.split('/');\n        switch (p.length) {\n            case 1:\n                uqOwner = '$$$';\n                uqName = p[0];\n                break;\n            case 2:\n                uqOwner = p[0];\n                uqName = p[1];\n                break;\n            default:\n                console.log('uq must be uqOwner/uqName format');\n                return;\n        }\n\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        let uqApi:UqApi;\n        if (uq === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            uqApi = new UnitxApi(appInFrame.unit);\n        }\n        else {\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.entities = new Uq(this, uqApi, appId);\n        */\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    //uq: string;\n    //id: number;\n    res: any;\n    uq: Uq;\n    error: string;\n    //private schemaLoaded:boolean = false;\n    \n    async init():Promise<void> {\n        return await this.uq.init();\n    }\n\n    async loadEntities():Promise<string> {\n        try {\n            await this.uq.loadAccess();\n            for (let tuid of this.uq.tuidArr) {\n                let {ui, res} = this.getUI(tuid);\n                tuid.setUIRes(ui, res);\n            }\n        }\n        catch (err) {\n            return err;\n        }\n    }\n\n    async checkEntities(): Promise<boolean> {\n        return await this.uq.checkAccess();\n    }\n\n    /*\n    private setTuidUI(tuid: Tuid) {\n        let {ui, res} = this.getUI(tuid);\n        tuid.ui = (ui as TuidUI).content;\n        tuid.res = res;\n    }\n    */\n\n    /*\n    async loadSchema():Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.loadEntites();\n            if (this.id === undefined) this.id = this.uq.uqId;\n            for (let i in this.ui) {\n                let g = this.ui[i];\n                if (g === undefined) continue;\n                let {caption, collection} = g;\n                if (collection === undefined) continue;\n                for (let j in collection) {\n                    if (this.uq[i](j) === undefined) {\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\n                    }\n                }\n            }\n            this.schemaLoaded = true;\n            return;\n        }\n        catch(err) {\n            console.error(err);\n            return this.error = err;\n        }\n    }\n    */\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.uq.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\n    action(entityName:string) {return this.uq.action(entityName);}\n    query(entityName:string) {return this.uq.query(entityName);}\n    book(entityName:string) {return this.uq.book(entityName);}\n    map(entityName:string) {return this.uq.map(entityName);}\n    history(entityName:string) {return this.uq.history(entityName);}\n    pending(entityName:string) {return this.uq.pending(entityName);}\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        return this.uq.tuidDiv(entityName, divName);\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.uq.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.uq.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.uq.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.uq.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.uq.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.uq.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.uq.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.uq.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.uq.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.uq.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.uq.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.uq.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.uq.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.uq.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.uq.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui, res;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            let tUI = this.ui[typeName];\n            if (tUI !== undefined) {\n                ui = tUI[name];\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:Tuid):CTuidMain {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:Tuid):CTuidEdit {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:Tuid):CTuidList {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:Tuid):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.uq.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n        return (ui && ui.content) || PureJSONContent;\n    }\n\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\n        let {owner} = tuidDiv;\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let c = this.cTuidInfo(tuid);\n        await c.start(id);\n    }\n\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner);\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { Page, List, LMR, FA } from '../../../ui';\nimport { tv } from '../../tools';\nimport { Map } from '../../uqs';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\nimport { PureJSONContent } from '../form/viewModel';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add:any, remove:any;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right:any;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content:any, border:any, valuesView:any;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = 'border-bottom';\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)}\n                left={left}\n                right={right}\n            >\n                <div className=\"py-1\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from '../CVEntity';\nimport { MapUI, CMap } from './cMap';\nimport { Map } from '../../uqs';\nimport { Page } from '../../../ui';\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import _ from 'lodash';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uqs';\nimport { VMapMain } from './vMain';\nimport { observable } from 'mobx';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuidBox = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children, box} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid} = keyField;\n        let {tuid, ownerField} = _tuid;\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\n        let callParam = param;\n        if (ownerField !== undefined) {\n            callParam = param[ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {name, type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\n        let label = cTuidMain.getLable(tuid.tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import * as React from 'react';\nimport { Pending } from '../../uqs';\nimport { Page } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { Pending } from '../../uqs';\nimport { VPendingMain } from './vPendingMain';\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","import * as React from 'react';\nimport { VPage, Page } from '../../../ui';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../uqs';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { Action } from '../../uqs';\nimport { VActionMain } from './vActionMain';\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n\n    async submitReturns(values:any) {\n        return this.entity.submitReturns(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","import * as React from 'react';\nimport { History } from '../../uqs';\nimport { Page } from '../../../ui';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { History } from '../../uqs';\nimport { VHistoryMain } from './vHistoryMain';\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {User} from '../user';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { isDevelopment } from '../net';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp((this as any) as C)).open(param);\n    }\n\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\n        return (new view((this as any) as C)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any):Promise<void>;\n    async start(param?:any):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call<T>(param?:any):Promise<T> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<T> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param);\n        });\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this as any)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Controller call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        return await this.controller.vCall(vp, param);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\nexport * from './toUiSelectItems';","\nexport const mobileRegex = /^[0-9]*$/;\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\n\nexport const EmailFieldRule = (value:any): string|string[] => {\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\n}\n\nexport const MobileFieldRule = (value:any): string|string[] => {\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface DropdownAction {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: DropdownAction[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | number;\n}\n\nfunction renderDate(vDate:Date|number, withTime:boolean) {\n    if (!vDate) return null;\n    let date: Date;\n    switch (typeof vDate) {\n        default: date = vDate as Date; break;\n        case 'string': date = new Date(vDate); break;\n        case 'number': date = new Date((vDate as number)*1000); break;\n    }\n\n    let now = new Date();\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\n    let d = date;\n    tick = now.getTime() - d.getTime();\n    let hour=d.getHours(), minute=d.getMinutes();\n    nDate=now.getDate();\n    _date=d.getDate();\n    month=d.getMonth()+1;\n    year=d.getFullYear();\n    nowYear = now.getFullYear();\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\n\n    if (tick < -24*3600*1000) {\n        if (year === nowYear)\n            return month+'月'+_date+'日' + hm;\n        else\n            return year+'年'+month+'月'+_date+'日' + hm;\n    }\n    if (tick < 24*3600*1000) {\n        return _date!==nDate? \n            (tick < 0? '明天 ' : '昨天 ') + hm \n            : withTime===true? hm : '今天';\n    }\n    if (year === nowYear) {\n        return month+'月'+_date+'日';\n    }\n    return year+'年'+month+'月'+_date+'日';\n}\n\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        return renderDate(this.props.date, false);\n    }\n}\n\nexport class EasyTime extends React.Component<EasyDateProps> {\n    render() {\n        return renderDate(this.props.date, true);\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Image } from '../ui';\n\nexport interface MediaProps {\n    icon: string;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp:any;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let cn = classNames(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import {observable, computed} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import * as React from 'react';\nimport { CApp, AppUI } from './controllers';\nexport * from './uqs';\nexport * from './controllers';\nexport * from './centerApi';\nexport * from './tools';\n\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n\nexport async function startApp(ui: AppUI) {\n    convertUIKeyToLowercase(ui);\n    let cApp = new (ui && ui.CApp || CApp)(ui);\n    await cApp.start();\n}\n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport abstract class Widget {\n    protected name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable protected errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    container = observer(():JSX.Element => {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any = this.label;\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.render());\n    })\n\n    protected get label():string {\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            else label = uiLabel || this.name;\n        }\n        return label;\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem, StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        this.internalOnKeyDown(evt);\n        if (evt.keyCode !== 13) return;\n        let {onEnter} = this.context.form.props;\n        if (onEnter === undefined) return;\n\n        this.changeValue(evt.currentTarget.value, true);\n\n        //this.checkRules();\n        //this.context.checkContextRules();\n        this.input.blur();\n\n        let ret = await onEnter(this.name, this.context);\n        if (ret !== undefined) {\n            this.context.setError(this.name, ret);\n        }\n    }\n\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n    }\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.clearErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleNum(res, min, max) :\n                new RuleInt(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || key>=48 && key<=57\n            || key>=96 && key<=105\n            || key===109 || key===189;\n    }\n    \n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n        let key = evt.keyCode;\n        event.returnValue = this.isValidKey(key);\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.clearErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline p-0');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        if (this.context.inNode === true) {\n            return <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n        }\n        else {\n            return <div className={cn}>\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\n            </div>;\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\nconst radioStyle:React.CSSProperties = {height: 'auto'};\n\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    /*\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n    */\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow, inNode} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'py-0');\n        return <span className={cn} style={radioStyle}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\n                            onChange={this.onInputChange} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            await this.context.submit(name);\n        }\n        /*\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n        */\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, caption:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            caption = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = caption; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    protected get label():string {return null}\n\n    render() {\n        return <this.observerRender />\n    }\n}\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget as Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[name];\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    async submit(buttonName: string) {\n        this.checkRules()\n        if (this.hasError === true) return;\n        let {onButtonClick} = this.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this);\n        if (ret === undefined) return;\n        this.setError(buttonName, ret);\n\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        this.clearErrors();\n        if (this.rules === undefined) return;\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.clearErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    clearWidgetsErrors() {\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearError();\n        }\n    }\n\n    checkRules() {\n        this.clearErrors();\n        this.clearWidgetsErrors();\n        this.checkFieldRules();\n        if (this.hasError === true) return;\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    clearErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        this.clearContextErrors();\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    clearErrors() {\n        super.clearErrors();\n        this.parentContext.clearErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName];\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.clearErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.clearErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\n                    {deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiImageItem } from '../../schema';\nimport { Image } from '../../image';\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class ImageWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiImageItem;\n    @observable private imageSrc: string;\n\n    protected init() {\n        super.init();\n        this.imageSrc = this.value;\n    }\n\n    protected onClick = async () => {\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\n        let ret = await edit.start();\n        if (ret !== null) {\n            this.setValue(ret);\n            this.imageSrc = ret;\n        }\n        await edit.end();\n    }\n\n    render() {\n        return <this.observerRender />;\n    }\n\n    private observerRender = observer(() => {\n        let cn = [\n            'bg-white p-1 d-flex justify-content-center',\n        ];\n        let onClick: any;\n        if (!this.readOnly && !this.disabled) {\n            cn.push('cursor-pointer');\n            onClick = this.onClick;\n        }\n        return <div className={classNames(cn)} onClick={onClick}>\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\n        </div>;\n    });\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\nimport { ImageWidget } from './imageWidget';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    image: {\n        dataTypes: ['string'],\n        widget: ImageWidget,\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {isRow, widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    return <widget.container />;\n    /*\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.container());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.container();\n        return widgetElement;\n    }\n    */\n}\n\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {};\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <textarea ref={(input) => this.input=input} \n            className={classNames(this.className, cn)}\n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    onEnter?: InputEnter;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    //private content: any;\n    //private formData: any;\n    private disposer: IReactionDisposer;\n    //@observable \n    readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, formData, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, res,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n\n        //this.formData = formData;\n        this.disposer = autorun(this.watch);\n        this.data = {};\n        // this.initRender();\n    }\n\n    private renderContent():any {\n        this.initData(this.props.formData);\n        let {children} = this.props;\n        if (children !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return <>{children}</>;\n        }\n\n        let Templet: TempletType;\n        if (this.uiSchema !== undefined) {\n            Templet = this.uiSchema.Templet;\n        }\n        if (Templet !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\n        }\n\n        this.formContext = new FormContext(this, false);\n        return <>{this.schema.map((v, index) => {\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n        })}</>;\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type !== 'arr') {\n            data[name] = formData[name];\n            return;\n        }\n\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\n        let {arr:arrItems} = arrItem;\n        if (arrItems === undefined) return;\n        let arrDict = arrItem.itemSchemas = {};\n        for (let item of arrItems) {\n            arrDict[item.name] = item;\n        }\n        let val:any[] = formData[name];\n        if (val === undefined) val = [];\n        else if (Array.isArray(val) === false) val = [val];\n        let arr:any[] = [];\n        for (let row of val) {\n            let {$isSelected, $isDeleted} = row;\n            let r = {\n                $source: row,\n                $isSelected: $isSelected,\n                $isDeleted: $isDeleted,\n            };\n            for (let item of arrItems) {\n                this.initDataItem(item, r, row);\n                /*\n                let {name:nm} = item;\n                let v = row[nm];\n                if (v === undefined) v = null;\n                r[nm] = v;\n                */\n            }\n            arr.push(r);\n        }\n        // 如果没有observable，行删除标志点击不管用\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\n        data[name] = observable(arr);\n        //data[name] = arr;\n        return;\n    }\n\n    private watch = () => {\n        let {formData} = this.props;\n        if (formData === undefined) return;\n        //this.initData(formData);\n        this.calcSelectOrDelete();\n    }\n    private calcSelectOrDelete() {\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        if (this.data === undefined) return;\n        let formArrVal = this.data[name];\n        if (formArrVal === undefined) return;\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        if (this.disposer !== undefined) this.disposer();\n    }\n\n    render() {\n        let content = this.renderContent();\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(content)}\n        </ContextContainer.Provider>;\n    }\n\n    async buttonClick(buttonName:string) {\n        this.formContext.checkRules()\n        if (this.formContext.hasError === true) return;\n\n        let {onButtonClick} = this.formContext.form.props;\n        if (onButtonClick === undefined) {\n            alert(`you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this.formContext);\n        if (ret === undefined) return;\n        this.formContext.setError(buttonName, ret);\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\n            {content}\n        </form>;\n    }\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class FormField extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {FormField} from './field';\nexport {Context, RowContext} from './context';\nexport * from './widgets';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.verifyValue();\n    }\n\n    private onFocus = () => {\n        this.error = undefined;\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>{\n                this.verifyValue();\n                if (this.error === undefined) resolve(this.newValue);\n            }}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    onBlur={this.onBlur}\n                    onFocus={this.onFocus}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiRadio } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class RadioItemEdit extends ItemEdit {\n    protected uiItem: UiRadio;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (value: any) => {\n        this.newValue = value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let {name} = this.itemSchema;\n        let {list, defaultValue} = this.uiItem;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>{\n                this.verifyValue();\n                if (this.error === undefined) resolve(this.newValue);\n            }}>保存</button>;\n        let content = list?\n            list.map((v, index:number) => {\n                let {title, value} = v;\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\n                    <input name={name} type=\"radio\" value={value} \n                        onClick={()=>this.onChange(value)} \n                        defaultChecked={value === defaultValue} /> {title || value} &nbsp;\n                </label>;\n            })\n            :\n            <>no list defined</>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">{content}</div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem, UiSelect } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class SelectItemEdit extends ItemEdit {\n    protected uiItem: UiSelect;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (value:any) => {\n        this.newValue = value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let {list} = this.uiItem;\n        let content = list?\n            list.map((v, index:number) => {\n                let {title, value} = v;\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\n                    {title || value}\n                </div>;\n            })\n            :\n            <>no list defined</>;\n        return <Page header={'更改' + this.label}>\n            <div className=\"my-3\">\n                {content}\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\nimport { RadioItemEdit } from './radioItemEdit';\nimport { SelectItemEdit } from './selectItemEdit';\nimport { UiSelectBase } from '../form/uiSchema';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    stopEdit?: boolean;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            let itemSchema = schema[i];\n            if (i>0) elItems.push(this.sep);\n            let value = this.props.data[itemSchema.name];\n            elItems.push(this.renderRow(itemSchema, value));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\n        let {name, type, required} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string = (uiItem && uiItem.label) || name;\n        //let value:any = this.props.data[name];\n        if (uiItem !== undefined && value) {\n            switch (uiItem.widget) {\n                case 'radio':\n                case 'select':\n                    let {list} = uiItem as UiSelectBase;\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\n                    break;\n            }\n        }\n        if (divValue === undefined) {\n            switch (type) {\n                default:\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\n                    break;\n                case 'image':\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                    break;\n            }\n        }\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"w-6c\">{label} {requireFlag}</div>\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>}\n        </div>;\n    };\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\n        if (stopEdit === true) return;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        if (itemEdit === undefined) {\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\n            return;\n        }\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue != value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                    this.props.data[itemSchema.name] = changeValue;\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            // 如果直接back，会触发reject，就到这里了\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            default: break;\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n            case 'radio': itemEdit = RadioItemEdit; break;\n            case 'select': itemEdit = SelectItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","export * from './edit';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from '../../pageItems';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return; }\n    updateProps(nextProps:any) {}\n    abstract render(item:any, index:number):JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport { uid } from '../../uid';\n\nexport class Static extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, render} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, computed, IObservableArray} from 'mobx';\nimport classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../../uid';\nimport { PageItems } from '../../pageItems';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    private _items: SelectableItem[];\n    private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private buildItems() {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            return this._items = undefined;\n        }\n        if (items === null) {\n            return this._items = null;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        this._selectedItems = selectedItems;\n        if (selectedItems === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:false, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        if (compare === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:selectedItems.find(si => si === v) !== undefined, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        return this._items = itemsArray.map(v => {\n            return {\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \n                item:v, \n                labelId:uid()\n            };\n        });\n    }\n    @computed get items() {\n        //if (this._items === undefined) \n        this.buildItems();\n        return this._items;\n    }\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render(item:SelectableItem, index:number):JSX.Element {\n        let {className, key, render, onSelect} = this.list.props.item;\n        let {labelId, selected} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(item.item, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from '../../pageItems';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport '../../css/va-list.css';\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string|number;\n    };\n    compare?:(item:any, selectItem)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    constructor(props:ListProps) {\n        super(props);\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        this.listBase.updateProps(nextProps);\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\n        if (before === undefined) before = 'before';\n        if (loading === undefined) loading = 'loading';\n        if (none === undefined) none = 'none';        \n        //this.listBase.selectedItems = selectedItems;\n        let {isPaged, items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport className from 'classnames';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"w-100\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    protected col: string;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className={this.col + '-3 col-form-label'}>\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label} = this.prop;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string = this.col + (label===undefined? '-12':'-9');\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = this.col + (label===undefined? '-12':'-9');\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n}\n","import { PropGridProps } from './PropGrid';\nimport {\n    PropRow, PropBorder, PropGap, \n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\n} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: () => void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props: any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps: PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps: PropGridProps, props: Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap: boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n    labelFixLeft?: boolean;\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n    load?: () => Promise<void>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n    load?: () => Promise<void>;\n\n    private _content: JSX.Element;\n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n    async start() {\n        if (this._content !== undefined) return;\n        if (this.load === undefined) return;\n        await this.load();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[] = [];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        this.size = size || 'md';\n        this.tabs.push(...tabs.map(v => {\n                let tab = new Tab();\n                tab.name = v.name;\n                tab.selected = false;\n                tab.caption = v.caption;\n                tab.contentBuilder = v.content;\n                tab.notify = v.notify;\n                tab.load = v.load;\n                return tab;\n            }\n        ));\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    private tabClick = async (tab:Tab) => {\n        await tab.start();\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    showTab(tabName: string) {\n        let tab = this.tabs.find(v => v.name === tabName);\n        if (tab === undefined) return;\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        let cn = classNames('tab', 'tab-' + this.size);\n        return <div className={cn}>\n            <div className={this.contentBack}>\n                {this.tabs.map((v,index) => {\n                    let style:React.CSSProperties={\n                        display: v.selected===true? undefined : 'none'};\n                    return <div key={index} style={style}>{v.content}</div>;\n                })}\n            </div>\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\n                {this.tabs.map((v,index) => {\n                    let {selected, caption, notify} = v;\n                    let notifyCircle:any;\n                    if (notify !== undefined) {\n                        let num = notify.get();\n                        if (num !== undefined) {\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                        }\n                    }\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                        <div className=\"align-self-center\">\n                            {notifyCircle}\n                            {caption(selected)}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\nimport { userApi } from './userApi';\n\nexport class EditMeInfo extends React.Component {\n    private schema:ItemSchema[] = [\n        {name:'nick', type:'string'} as StringSchema,\n        {name:'icon', type:'image'} as ImageSchema\n    ];\n    private uiSchema:UiSchema = {\n        items: {\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\n            icon: {widget:'image', label:'头像'} as UiImageItem,\n        }\n    }\n    @observable private data:any;\n\n    constructor(props:any) {\n        super(props);\n        let {nick, icon} = nav.user;\n        this.data = {\n            nick: nick,\n            icon: icon,\n        }\n    }\n\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\n        let {name} = itemSchema;\n        await userApi.userSetProp(name, newValue);\n        this.data[name] = newValue;\n        nav.user[name] = newValue;\n        nav.saveLocalUser();\n    }\n\n    render() {\n        return <Page header=\"个人信息\">\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\n                data={this.data}\n                onItemChanged={this.onItemChanged} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {FetchError} from '../fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","import {User, Guest, Unit} from './user';\n\nexport interface ClearableData {\n    clear(): void;\n}\n\nexport class Data<T> implements ClearableData {\n    private name: string;\n    private value?: T;\n    constructor(name: string) {this.name = name; }\n    get(): T {\n        if (this.value !== undefined) return this.value;\n        let v = localStorage.getItem(this.name);\n        return this.value = v === null ? undefined : JSON.parse(v); \n    }\n    set(value: T) {\n        if (!value) { this.clear(); return; }\n        this.value = value;\n        localStorage.setItem(this.name, JSON.stringify(value));\n    }\n    clear() {\n        this.value = undefined;\n        localStorage.removeItem(this.name);\n    }\n}\n\nexport class LocalData {\n    user = new Data<User>('user');\n    guest = new Data<Guest>('guest');\n    unit = new Data<Unit>('unit');\n    testing = new Data<boolean>('testing');\n\n    logoutClear() {\n        [\n            this.user,\n            this.unit,\n        ].map(d => d.clear());\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from '../tonva';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from '../tonva';\nimport { CMiApp } from '../CMiApp';\nimport { observable } from 'mobx';\nimport { meTab } from '../me';\n\nexport const store = {\n    //homeCount: observable.box<number>(-1),\n    //cartCount: observable.box<number>(101),\n};\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CMiApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { View, nav } from '../tonva';\nimport { LMR, FA, SearchBox } from '../tonva';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from '../tonva';\nimport { CHome } from './CHome';\nimport { SearchBox } from '../tonva';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","import * as React from 'react';\nimport { VPage, Page, View } from '../tonva';\nimport { observer } from 'mobx-react';\nimport { CHome } from './CHome';\nimport { observable } from 'mobx';\n\nconst LIGUOSHENG = 5;\n\ninterface CatItem {\n    title: string;\n    sub: string[];\n    img: string;\n}\n\ninterface Cat {\n    caption: string;\n    items?: CatItem[];\n}\n\nconst catItemStyle:React.CSSProperties = {\n    width:'12rem', \n    //height: '6rem', \n    overflow: 'hidden', \n};\nconst subStyle:React.CSSProperties = {\n    fontSize:'0.75rem',\n    overflow: 'hidden', \n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n};\nconst imgStyle:React.CSSProperties = {\n    //float:'left', clear:'both', \n    height:'1.5rem', width:'1.5rem', opacity:0.1, \n    marginRight: '0.5rem',\n};\n\nexport class VHome extends View<CHome> {\n\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private renderSection = (item: any, index: number) => {\n        return <section>\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\n            <p>{item.content}</p>\n        </section>\n    }\n\n    render(param: any): JSX.Element {\n        return <this.content />\n    }\n\n    private page = observer(() => {\n        let { openMetaView } = this.controller;\n        let viewMetaButton = <></>;\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n        }\n\n        return <Page header={false} footer={viewMetaButton}>\n            <this.content />\n        </Page>;\n    })\n\n    private content = observer(() => {\n        let siteHeader = this.controller.renderSiteHeader();\n        return <>\n            {siteHeader}\n            fdsajfdaldfjl\n        </>\n    });\n}","import * as React from 'react';\nimport { CTuidMain } from '../tonva';\nimport { VSiteHeader } from './VSiteHeader';\nimport { CMiApp } from '../CMiApp';\nimport { PageItems, Controller } from '../tonva';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\n\nclass HomeSections extends PageItems<any> {\n\n    private sectionTuid: CTuidMain;\n\n    constructor(sectionTuid: CTuidMain) {\n        super();\n        this.firstSize = this.pageSize = 13;\n        this.sectionTuid = sectionTuid;\n    }\n\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n        return undefined;\n    }\n\n    protected setPageStart(item: any): any {\n        if (item === undefined) return 0;\n        return item.id;\n    }\n}\n\nexport class CHome extends Controller {\n\n    cApp: CMiApp;\n    homeSections: HomeSections;\n\n    constructor(cApp: CMiApp, res: any) {\n        super(res);\n\n        this.cApp = cApp;\n    }\n\n    async internalStart(param: any) {\n        this.openVPage(VHome);\n    }\n\n    renderSiteHeader = () => {\n        return this.renderView(VSiteHeader);\n    }\n\n    renderSearchHeader = (size?:string) => {\n        return this.renderView(VSearchHeader, size);\n    }\n\n    renderHome = () => {\n        return this.renderView(VHome);\n    }\n\n    openMetaView = () => {\n    }\n\n    tab = () => <this.renderHome />;\n}","import { AppUI, CApp } from \"../tonva\";\nimport { VHome } from './main';\nimport { CMiApp } from '../CMiApp';\nimport miUI from './mi';\n\nconst ui: AppUI = {\n    appName: \"bruce/mi\",\n    CApp: CMiApp,\n    main: VHome,\n    uqs: {\n        'bruce/mi': miUI\n    }\n}\n\nexport default ui;\n","import * as React from 'react';\n\nimport { CApp, CUq, Controller, VPage } from './tonva';\nimport { CHome } from './home/CHome';\nimport { consts } from './home/consts';\nimport { WebUser } from './CurrentUser';\n\nexport class CMiApp extends CApp {\n\n  currentUser: WebUser;\n  currentSalesRegion: any;\n  currentLanguage: any;\n\n  cHome: CHome;\n\n  protected async internalStart() {\n    if (this.isLogined) {\n      //this.currentUser.user = this.user;\n    }\n\n    this.cHome = new CHome(this, undefined);\n\n    this.showMain();\n  }\n\n  showMain(initTabName?: string) {\n    this.openVPage(this.VAppMain, initTabName);\n  }\n\n  public async showOneVPage(vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> {\n    await (new vp(this)).open(param);\n  }\n\n  protected onDispose() {\n  }\n}\n","import { UqUI } from '../../tonva';\n\nconst uqUI:UqUI = {\n}\n\n\nconst uqUIs = uqUI;\n/*\n{\n    $: uqUI,\n    \"aa-bb\": aa_BB_UsqUI,\n}\n*/\nexport default uqUIs;\n","import * as React from 'react';\nimport './App.css';\nimport { NavView, nav, Page, Tabs } from './tonva';\nimport { startApp } from './tonva';\nimport ui from './ui';\n//import { faceTabs } from 'facetabs';\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await startApp(ui);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}