{"version":3,"sources":["consts.ts","stockinfo/VStockInfo.tsx","CUqBase.ts","stockinfo/CStockInfo.tsx","stockinfo/index.ts","images/logo.svg","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","net/httpChannel.ts","net/httpChannelUI.ts","net/apiBase.ts","net/miApi.ts","me/index.tsx","ui/main.tsx","CMiApp.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","consts","uqBasedata","appIcon","miApiHost","miApiHostDebug","isDevelopment","VStockInfo","tonva__WEBPACK_IMPORTED_MODULE_2__","[object Object]","this","page","Object","mobx_react__WEBPACK_IMPORTED_MODULE_3__","openMetaView","controller","viewMetaButton","react__WEBPACK_IMPORTED_MODULE_1__","isLogined","type","className","onClick","header","headerClassName","content","baseInfo","capitalEarning","bonus","caption","value","name","code","pe","roe","price","order","baseItem","left","onClickName","toFixed","item","symbol","event","preventDefault","url","window","open","items","capitalearning","loading","render","row","capital","earning","year","day","param","openPage","CUqBase","tonva__WEBPACK_IMPORTED_MODULE_0__","CStockInfo","_CUqBase__WEBPACK_IMPORTED_MODULE_2__","loaded","_earning","mobx__WEBPACK_IMPORTED_MODULE_1__","array","deep","_capitalearning","_bonus","_divideInfo","loadData","tslib__WEBPACK_IMPORTED_MODULE_0__","id","ret","cApp","miApi","query","Array","isArray","arr1","arr2","length","clear","arr3","push","arr4","arr5","arr6","divideInfo","openVPage","_VStockInfo__WEBPACK_IMPORTED_MODULE_3__","_CStockInfo__WEBPACK_IMPORTED_MODULE_1__","module","exports","p","VSiteHeader_VSiteHeader","dist","react","src","logo_default","a","alt","style","height","width","right","undefined","renderSearchHeader","VSearchHeader_VSearchHeader","onSearch","key","tslib_es6","size","placeholder","VHome_VHome","mobx_react_module","onPage","onScrollBottom","onSelect","isSelected","anySelected","PageItems","width6","width8","renderRow","onSelected","rowKey","before","index","rowContent","assign","toString","openStockInfo","clickRow","callOnSelected","alert","CHome_HomePageItems","cHome","super","pageSize","firstSize","pageStart","user","yearlen","result","process","CHome_CHome","more","renderSiteHeader","renderView","renderHome","tab","newC","stockinfo","start","first","httpChannel_HttpChannel","hostUrl","apiToken","ui","startWait","endWait","reject","showError","error","timeout","post","params","keys","c","k","options","buildOptions","method","innerFetch","body","JSON","stringify","resolve","that","path","buildError","err","channel","console","log","timeOutHandler","setTimeout","res","fetch","encodeURI","ok","clearTimeout","statusText","ct","headers","get","indexOf","json","then","retJson","catch","message","text","toLowerCase","startsWith","logout","u","Promise","language","culture","Headers","append","lang","httpChannelUI_HttpChannelNavUI","onError","apiBase_ApiBase","showWaiting","getHttpChannel","callFetch","put","delete","channelUIs","channelNoUIs","miApi_MiApiChannel","basePath","apiName","uqToken","token","channels","channelUI","miApi_MiApi","pbody","call","lodash_default","clone","proc","meTab","LoadableComponent","lib_default","loader","e","bind","color","selected","main_VHome","faceTabs","label","icon","notify","map","v","tabs","CMiApp_CMiApp","miHost","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","REACT_APP_MIDATA_HOST","searchMain","vp","appConfig","appName","version","tvs","src_App_0","onLogined","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","react_dom","document","getElementById","URL","origin","addEventListener","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd8548cc.chunk.js","sourcesContent":["export const consts = {\n    uqBasedata: \"bruce/mi\",\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\n    miApiHost: 'http://106.14.213.254/',\n    miApiHostDebug: 'http://localhost:6010/',\n    isDevelopment: process.env.NODE_ENV === 'development',\n}","import * as React from 'react';\r\nimport { VPage, Page, View, List, LMR, left0 } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CStockInfo } from './CStockInfo'\r\nimport { NStockInfo, StockCapitalearning, StockBonus } from './StockInfoType';\r\n\r\nexport class VStockInfo extends VPage<CStockInfo> {\r\n  async open(param?: any) {\r\n    this.openPage(this.page);\r\n  }\r\n\r\n  render(param: any): JSX.Element {\r\n    return <this.page />\r\n  }\r\n\r\n  private page = observer(() => {\r\n    let { openMetaView } = this.controller;\r\n    let viewMetaButton = <></>;\r\n    if (this.controller.isLogined) {\r\n      viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\r\n    }\r\n\r\n    return <Page header=\"股票信息\"\r\n      headerClassName='bg-primary'>\r\n      <this.content />\r\n    </Page>;\r\n  })\r\n\r\n  private content = observer(() => {\r\n    return <>\r\n      <this.baseInfo />\r\n      <this.capitalEarning />\r\n      <this.bonus />\r\n    </>\r\n  });\r\n\r\n  private caption = (value:string) => <span className=\"text-muted small\">{value}: </span>;\r\n  \r\n\r\n  private baseInfo = () => {\r\n    let { name, code, pe, roe, price, order } = this.controller.baseItem;\r\n    let left = <div className=\"c6\"><span className=\"text-primary\">{name}</span><br />{code}</div>\r\n    return <>\r\n      <div className=\"px-3 py-1\">名称</div>\r\n      <LMR className=\"px-3 py-2 bg-white\" left={left} onClick={() => this.onClickName(this.controller.baseItem)}>\r\n        <div className=\"d-flex flex-wrap\">\r\n          <div className=\"px-3 c8\">{this.caption('PE')}{pe.toFixed(2)}</div>\r\n          <div className=\"px-3 c8\">{this.caption('ROE')}{(roe * 100).toFixed(2)}</div>\r\n          <div className=\"px-3 c8\">{this.caption('Price')}{price.toFixed(2)}</div>\r\n        </div>\r\n      </LMR>\r\n    </>\r\n  }\r\n\r\n  protected onClickName = (item: NStockInfo) => {\r\n    let { symbol } = item;\r\n    event.preventDefault();\r\n    let url = `http://finance.sina.com.cn/realstock/company/${symbol}/nc.shtml`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  private capitalEarning = observer(() => {\r\n    let items = this.controller.capitalearning;\r\n    let header = <div className=\"px-3\">\r\n      <div className=\"px-3 c6\">年</div>\r\n      <div className=\"px-3 c6 text-right\">股本</div>\r\n      <div className=\"px-3 c6 text-right\">收益</div>\r\n      <div className=\"px-3 c6 text-right\">ROE</div>\r\n    </div>;\r\n    return <>\r\n      <div className=\"px-3 py-1\">历年股本收益</div>\r\n      <List header={header} loading=\"...\"\r\n        items={items}\r\n        item={{\r\n          render: (row: StockCapitalearning) => {\r\n            let {capital, earning} = row;\r\n            return <div className=\"px-3 py-2 d-flex flex-wrap\">\r\n              <div className=\"px-3 c6\">{row.year}</div>\r\n              <div className=\"px-3 c6 text-right\"> {capital.toFixed(2)}</div>\r\n              <div className=\"px-3 c6 text-right\"> {earning.toFixed(2)}</div>\r\n              <div className=\"px-3 c6 text-right\"> {(earning/capital).toFixed(2)}</div>\r\n            </div>\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  });\r\n\r\n  private bonus = observer(() => {\r\n    let items = this.controller.bonus;\r\n    let header = <div className=\"px-3\">\r\n      <div className=\"px-3 c8\">日期</div>\r\n      <div className=\"px-3 c6 text-right\">分红</div>\r\n    </div>;\r\n    return <>\r\n      <div className=\"px-3 py-1\">历年分红</div>\r\n      <List header={header} loading=\"...\"\r\n        items={items}\r\n        item={{\r\n          render: (row: StockBonus) => {\r\n            return <div className=\"px-3 py-2 d-flex flex-wrap\">\r\n              <div className=\"px-3 c8\">{row.day}</div>\r\n              <div className=\"px-3 c6 text-right\"> {row.bonus.toFixed(2)}</div>\r\n            </div>\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  });\r\n}","import { CBase, CSub } from 'tonva';\r\nimport { UQs } from './uqs';\r\n\r\nexport abstract class CUqBase extends CBase {\r\n  protected readonly uqs: UQs;\r\n}\r\n\r\nexport abstract class CUqSub extends CSub {\r\n  protected readonly uqs: UQs;\r\n  protected readonly owner: any;\r\n}\r\n","import * as React from 'react';\r\nimport { observable, IObservableArray, computed, isObservableArray } from 'mobx';\r\nimport { CUqBase } from '../CUqBase';\r\nimport { CMiApp } from '../CMiApp';\r\nimport { VStockInfo } from './VStockInfo'\r\nimport { NStockInfo, StockPrice, StockEarning, StockRoe, StockCapitalearning, StockBonus, StockDivideInfo } from './StockInfoType';\r\n\r\nexport class CStockInfo extends CUqBase {\r\n  readonly cApp: CMiApp;\r\n  baseItem: NStockInfo;\r\n  @observable protected loaded: boolean = false;\r\n\r\n  @observable price : StockPrice;\r\n  @observable roe: StockRoe;\r\n  protected _earning: IObservableArray<StockEarning> = observable.array<StockEarning>([], { deep: true});\r\n  protected _capitalearning: IObservableArray<StockCapitalearning> = observable.array<StockCapitalearning>([], { deep: true});\r\n  protected _bonus: IObservableArray<StockBonus> = observable.array<StockBonus>([], { deep: true});\r\n  protected _divideInfo: IObservableArray<StockDivideInfo> = observable.array<StockDivideInfo>([], { deep: true});\r\n  \r\n  @computed get earning(): IObservableArray<StockEarning> {\r\n    if (this.loaded === false) return undefined;\r\n    return this._earning;\r\n  }\r\n\r\n  @computed get capitalearning(): IObservableArray<StockCapitalearning> {\r\n    if (this.loaded === false) return undefined;\r\n    return this._capitalearning;\r\n  }\r\n\r\n  @computed get bonus(): IObservableArray<StockBonus> {\r\n    if (this.loaded === false) return undefined;\r\n    return this._bonus;\r\n  }\r\n\r\n  @computed get divideInfo(): IObservableArray<StockDivideInfo> {\r\n    if (this.loaded === false) return undefined;\r\n    return this._divideInfo;\r\n  }\r\n\r\n  loadData = () => {\r\n    this.loading();\r\n  }\r\n\r\n  loading = async () => {\r\n    if (!this.baseItem)\r\n      return;\r\n    let { id } = this.baseItem;\r\n    let ret = await this.cApp.miApi.query('q_stockallinfo', [id]);\r\n    if (Array.isArray(ret)) {\r\n      let arr1 = ret[1];\r\n      if (Array.isArray(arr1)) {\r\n        this.price = arr1[0];\r\n      }\r\n\r\n      let arr2 = ret[2];\r\n      if (Array.isArray(arr2)) {\r\n        this.roe = arr2[0];\r\n      }\r\n\r\n      if (this._earning.length > 0) {\r\n        this._earning.clear();\r\n      }\r\n      let arr3 = ret[3];\r\n      if (Array.isArray(arr3)) {\r\n        this._earning.push(...arr3);\r\n      }\r\n\r\n      if (this._capitalearning.length > 0) {\r\n        this._capitalearning.clear();\r\n      }\r\n      let arr4 = ret[4];\r\n      if (Array.isArray(arr4)) {\r\n        this._capitalearning.push(...arr4);\r\n      }\r\n\r\n      if (this._bonus.length > 0) {\r\n        this._bonus.clear();\r\n      }\r\n      let arr5 = ret[5];\r\n      if (Array.isArray(arr5)) {\r\n        this._bonus.push(...arr5);\r\n      }\r\n\r\n      if (this._divideInfo.length > 0) {\r\n        this._divideInfo.clear();\r\n      }\r\n      let arr6 = ret[6];\r\n      if (Array.isArray(arr6)) {\r\n        this._divideInfo.push(...arr6);\r\n      }\r\n    }\r\n\r\n    this.loaded = true;\r\n  }\r\n\r\n  async internalStart(param: any) {\r\n    this.baseItem = param as NStockInfo;\r\n    this.loadData();\r\n    this.openVPage(VStockInfo);\r\n  }\r\n\r\n  openMetaView = () => {\r\n  }\r\n\r\n}","export * from './StockInfoType';\r\nexport { CStockInfo } from './CStockInfo';\r\nexport { VStockInfo } from './VStockInfo';","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport { View, nav } from 'tonva';\nimport { LMR, FA, SearchBox } from 'tonva';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from 'tonva';\nimport { CHome } from './CHome';\nimport { SearchBox } from 'tonva';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { VPage, Page, View, List, LMR } from 'tonva';\nimport { NStockInfo } from '../stockinfo';\nimport { CHome } from './CHome';\n\nexport class VHome extends View<CHome> {\n\n  render(param: any): JSX.Element {\n    return <this.page />\n  }\n\n  private page = observer(() => {\n    let { openMetaView, onPage } = this.controller;\n    let viewMetaButton = <></>;\n    if (this.controller.isLogined) {\n      viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n    }\n\n    return <Page header=\"股票列表\"  onScrollBottom={onPage} \n      headerClassName='bg-primary py-1 px-3'>\n      \n      <this.content />\n    </Page>;\n  })\n\n  private onSelect = (item:any, isSelected:boolean, anySelected:boolean) => {\n\n  }\n\n  private content = observer(() => {\n    let {PageItems} = this.controller;\n    let header = <div className=\"px-3\">\n      <div className=\"px-3\" style={this.width6} />\n      <div className=\"px-3\" style={this.width8}>PE</div>\n      <div className=\"px-3\" style={this.width8}>ROE</div>\n      <div className=\"px-3\" style={this.width8}>PRICE</div>\n    </div>;\n    return <>\n      <List header={header}\n        items={PageItems.items}\n        item={{ render: this.renderRow, onClick: this.onSelected, key: this.rowKey }}\n        before={'搜索' + ' ' + '资料'}\n      />\n    </>\n  });\n\n  renderRow = (item: any, index: number): JSX.Element => <this.rowContent {...item} />;\n  private width6 = {width: '6rem'};\n  private width8 = {width: '8rem'};\n  protected rowContent = (row: any): JSX.Element => {\n    let { id, name, code, pe, roe, price, order } = row as NStockInfo;\n    let left = <div className=\"\" style={this.width6}><span className=\"text-primary\">{name}</span><br/>{code}</div>\n    return <LMR className=\"px-3 py-2\" left={left} right = {order.toString()} onClick={()=>this.onClickName(row)}>\n      <div className=\"d-flex flex-wrap\">\n        <div className=\"px-3 d-flex\" style={this.width8}>{pe.toFixed(2)}</div>\n        <div className=\"px-3\" style={this.width8}> {(roe * 100).toFixed(2)}</div>\n        <div className=\"px-3\" style={this.width8}> {price.toFixed(2)}</div>\n      </div>\n    </LMR>\n  }\n\n  private rowKey = (item: any) => {\n    let { id } = item;\n    return id;\n  }\n\n  protected onClickName = (item: NStockInfo) => {\n    this.controller.openStockInfo(item);\n    /* let {symbol} = item;\n    event.preventDefault();\n    let url = `http://finance.sina.com.cn/realstock/company/${symbol}/nc.shtml`;\n    window.open(url, '_blank'); */\n  }\n\n  protected onSelected = async (item: any): Promise<void> => {\n    let a = 0;\n  }\n\n  private callOnSelected(item: any) {\n    if (this.onSelected === undefined) {\n      alert('onSelect is undefined');\n      return;\n    }\n    this.onSelected(item);\n  }\n  clickRow = (item: any) => {\n    this.callOnSelected(item);\n  }\n}","import * as React from 'react';\nimport { nav } from 'tonva';\nimport { PageItems, Controller } from 'tonva';\nimport { CUqBase } from '../CUqBase';\nimport { CStockInfo, NStockInfo } from '../stockinfo';\nimport { VSiteHeader } from './VSiteHeader';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\n\nclass HomePageItems<T> extends PageItems<T> {\n    cHome: CHome;\n    constructor(cHome: CHome) {\n        super(true);\n        this.cHome = cHome;\n        this.pageSize = 30;\n        this.firstSize = 30;\n    }\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n        let query = {\n            name:'pe',\n            pageStart:pageStart,\n            pageSize:pageSize,\n            user:this.cHome.user.id,\n            yearlen: 1,\n        };\n        let result = await this.cHome.cApp.miApi.process(query, []);\n        if (Array.isArray(result) === false) return [];\n        return result as any[];\n    }\n    protected setPageStart(item: any) {\n        this.pageStart = item === undefined ? 0 : item.order;\n    }\n}\n\nexport class CHome extends CUqBase {\n    PageItems: PageItems<any> = new HomePageItems<any>(this);\n\n    //cApp: CMiApp;\n\n    //vHome: VHome;\n\n    /*\n    constructor(cApp: CMiApp, res: any) {\n        super(res);\n\n        this.buildPageItems();\n        this.cApp = cApp;\n        this.vHome = new VHome(this);\n    }\n    */\n    /*\n    protected buildPageItems(): PageItems<any> {\n        return this.PageItems = new HomePageItems<any>(this);\n    }\n    */\n\n    onPage = () => {\n        this.PageItems.more();\n    }\n\n    async searchMain(key: string) {\n        /*\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }*/\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async internalStart(param: any) {\n        //this.openVPage(VHome);\n    }\n\n    renderSiteHeader = () => {\n        return this.renderView(VSiteHeader);\n    }\n\n    renderSearchHeader = (size?: string) => {\n        return this.renderView(VSearchHeader, size);\n    }\n\n    \n    renderHome = () => {\n        //return this.vHome.render(undefined);\n        return this.renderView(VHome);\n    }\n    \n\n    openMetaView = () => {\n    }\n\n    tab = () => <this.renderHome />;\n\n    openStockInfo = (item:NStockInfo) => {\n        let cStockInfo = this.newC(CStockInfo); // new CStockInfo(this.cApp, undefined);\n        cStockInfo.start(item);\n    }\n}","import {FetchError} from './fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from 'tonva';\nimport { consts } from '../consts';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = consts.isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import {nav} from 'tonva';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:any):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:any):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import _ from 'lodash';\nimport { HttpChannel } from './httpChannel';\nimport { HttpChannelNavUI } from './httpChannelUI';\nimport { ApiBase } from './apiBase';\n\nlet channelUIs: { [name: string]: HttpChannel } = {};\nlet channelNoUIs: { [name: string]: HttpChannel } = {};\n\nclass MiApiChannel extends ApiBase {\n  private apiName: string;\n  url: string;\n\n  constructor(url: string, basePath: string, apiName: string, uqToken: string, showWaiting?: boolean) {\n    super(basePath, showWaiting);\n    this.showWaiting = showWaiting;\n    this.apiName = apiName;\n    this.token = uqToken;\n    this.url = url;\n  }\n\n  protected async getHttpChannel(): Promise<HttpChannel> {\n    let channels: { [name: string]: HttpChannel };\n    let channelUI: HttpChannelNavUI;\n    if (this.showWaiting === true || this.showWaiting === undefined) {\n      channels = channelUIs;\n      channelUI = new HttpChannelNavUI();\n    }\n    else {\n      channels = channelNoUIs;\n    }\n    let channel = channels[this.apiName];\n    if (channel !== undefined) return channel;\n    channel = new HttpChannel(this.url, this.token, channelUI);\n    return channels[this.apiName] = channel;\n  }\n}\n\nexport class MiApi {\n  private channel: MiApiChannel;\n\n  constructor(url: string, basePath: string, apiName: string, uqToken: string, showWaiting?: boolean) {\n    this.channel = new MiApiChannel(url, basePath, apiName, uqToken, showWaiting);\n  }\n\n  async query(name: string, params: any[]): Promise<any> {\n    let pbody = { call: name, params: params };\n    return await this.channel.post('sql/call', pbody);\n  }\n\n  async page(name: string, params: any[], pageStart: number, pageSize: number): Promise<any> {\n    let p: any[];\n    switch (typeof params) {\n      case 'undefined': p = []; break;\n      default: p = _.clone(params); break;\n    }\n    p.push(pageStart);\n    p.push(pageSize);\n    let pbody = { call: name, params: p };\n    return await this.channel.post('sql/call', pbody);\n  }\n\n  async process(proc: any, params: any[]): Promise<any> {\n    let pbody = { proc: proc, params: params };\n    return await this.channel.post('sql/query', pbody);\n  }\n}\n","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from 'tonva';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\nimport { CMiApp } from '../CMiApp';\nimport { observable } from 'mobx';\nimport { meTab } from '../me';\n\nexport const store = {\n    //homeCount: observable.box<number>(-1),\n    //cartCount: observable.box<number>(101),\n};\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CMiApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { CApp, CUq, Controller, VPage, CAppBase, IConstructor } from 'tonva';\nimport { CHome } from './home';\nimport { consts } from './consts';\nimport { MiApi } from './net';\nimport {nav} from 'tonva';\nimport { VHome } from 'ui/main';\nimport { CUqBase } from './CUqBase';\n\nexport class CMiApp extends CAppBase {\n  cHome: CHome;\n  miApi: MiApi;\n\n  protected async internalStart() {\n    if (this.isLogined) {\n    }\n\n    let n = nav;\n\n    let token = this.user.token;\n\n    let miHost = consts.isDevelopment ? consts.miApiHostDebug : consts.miApiHost;\n    this.miApi = new MiApi(miHost, 'fsjs/', 'miapi', token, false);\n    this.cHome = this.newC(CHome); //new CHome(this, undefined);\n    let params = [];\n    //let ret = await this.miApi.page('q_stocksquery', params, 0, 100);\n    let env = process.env;\n    this.cHome.searchMain('');\n    //this.showMain();\n    this.openVPage(VHome);\n  }\n\n  protected newC<T extends CUqBase>(type: IConstructor<T>):T {\n    return new type(this);\n  }\n\n\n  /*\n  showMain(initTabName?: string) {\n    this.openVPage(this.VAppMain, initTabName);\n  }*/\n\n  public async showOneVPage(vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> {\n    await (new vp(this)).open(param);\n  }\n\n  protected onDispose() {\n  }\n}\n","import * as React from 'react';\nimport './App.css';\nimport { NavView, nav, Page, Tabs, start, AppConfig } from 'tonva';\n//import { startApp } from 'tonva';\nimport { CMiApp } from 'CMiApp';\n//import ui from './ui';\n//import { faceTabs } from 'facetabs';\n\nconst appConfig:AppConfig = {\n  appName: 'bruce/mi',\n  version: '1.00',\n  tvs: undefined, //TVs;\n};\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await start(CMiApp, appConfig);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}